Hex:
  type: string
  pattern: '^0[xX][0-9a-fA-F]+$'

# TODO: this does not currently allow for ENS addresses (e.g. vitalik.eth)
Address:
  $ref: '#/Hex'
  minLength: 42
  maxLength: 42
  # Vitalik's ETH address
  default: '0xd8da6bf26964af9d7eed9e03e53415d37aa96045'

FromAddress:
  $ref: '#/Address'
  # TODO: would hex make more sense than 20 bytes here?
  description: '20 Bytes - The address the transaction is sent from.'

ToAddress:
  $ref: '#/Address'
  description: '20 Bytes - The address the transaction is directed to'
  # USDC contract
  default: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'

Value:
  $ref: '#/Hex'
  description: 'amount in wei of ETH to transfer from sender to recipient'
  default: '0x0'

Data:
  $ref: '#/Hex'
  description: Hash of the method signature and encoded parameters
  default: '0x'

GasLimit:
  $ref: '#/Hex'
  description: 'max amount of gas available to the transaction'

GasPrice:
  $ref: '#/Hex'
  description: '(type 0) amount in wei per unit of gas'

MaxPriorityFeePerGas:
  $ref: '#/Hex'
  description: '(type 2) max amount of gas to be included as a tip to the validator'

MaxFeePerGas:
  $ref: '#/Hex'
  description: '(type 2) max amount of gas willing to be paid for the transaction (inclusive of baseFeePerGas and maxPriorityFeePerGas)'

TxObject:
  type: object
  description: The transaction call object
  properties:
    from:
      $ref: '#/FromAddress'
    to:
      $ref: '#/ToAddress'
    value:
      $ref: '#/Value'
    data:
      $ref: '#/Data'
    gas:
      $ref: '#/GasLimit'
    gasPrice:
      $ref: '#/GasPrice'
    maxFeePerGas:
      $ref: '#/MaxFeePerGas'
    maxPriorityFeePerGas:
      $ref: '#/MaxPriorityFeePerGas'

  # TODO: what about empty to address when deploying contract?
  required:
    - to

BlockNumber:
  title: Block number
  type: string
  description: The hex value of a **block number**.
  default: '0x61A80'

Id:
  type: integer
  default: 1
  # readOnly: true hides field in Readme UI!

JsonRpc:
  type: string
  default: '2.0'

Method:
  # Option 1
  # type: enum
  # # TODO: readme currently shows an empty option - bug needs to be fixed on their end
  # enum:
  #   - alchemy_simulateAssetChanges
  # default: alchemy_simulateAssetChanges
  # readOnly: true

  # Option 2
  type: string
  default: 'TODO: override with own method name'

# ================= Account Abstraction =================

UserOperationPartial:
  title: User Operation ( missing signature, paymasterData, and gas fields )
  type: object
  properties:
    sender:
      $ref: '#/Hex'
      description: The account making the operation
      default: '0x0be71941D041a32fe7DF4A61Eb2fCff3b03502C0'
    nonce:
      $ref: '#/Hex'
      description: Anti-replay parameter; also used as the salt for first-time account creation
      default: '0x2a'
    initCode:
      $ref: '#/Hex'
      description: The initCode of the account (needed if and only if the account is not yet on-chain and needs to be created)
      default: '0x'
    callData:
      $ref: '#/Hex'
      description: |
        Encoded data for executing the primary function call or operation within the user's transaction, such as calling a smart contract function or transferring tokens. This data is passed to the sender's address during the execution of the user operation.
      default: '0xb61d27f60000000000000000000000000be71941d041a32fe7df4a61eb2fcff3b03502c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000004d087d28800000000000000000000000000000000000000000000000000000000'

UserOperationPartialWithGasFields:
  title: User Operation ( missing signature and paymasterData )
  type: object
  allOf:
    - $ref: '#/UserOperationPartial'
    - type: object
      properties:
        callGasLimit:
          $ref: '#/Hex'
          description: The amount of gas to allocate the main execution call
        verificationGasLimit:
          $ref: '#/Hex'
          description: The amount of gas to allocate for the verification step
        preVerificationGas:
          $ref: '#/Hex'
          description: The amount of gas to pay for to compensate the bundler for pre-verification execution and calldata
        maxFeePerGas:
          $ref: '#/Hex'
          description: The maximum fee per gas to pay for the execution of this operation (similar to EIP-1559 max_fee_per_gas)
        maxPriorityFeePerGas:
          $ref: '#/Hex'
          description: Maximum priority fee per gas (similar to EIP-1559 max_priority_fee_per_gas)

UserOperation:
  title: User Operation
  type: object
  allOf:
    - $ref: '#/UserOperationPartialWithGasFields'
    - type: object
      properties:
        signature:
          $ref: '#/Hex'
          description: Data passed into the account along with the nonce during the verification step
          default: '0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c'
        paymasterAndData:
          $ref: '#/Hex'
          description: Address of paymaster sponsoring the transaction, followed by extra data to send to the paymaster (empty for self-sponsored transaction)
          default: '0xc03aac639bb21233e0139381970328db8bceeb67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c'

UserOperationReceipt:
  type: object
  description: UserOperationReceipt object representing the outcome of a UserOperation.
  properties:
    userOpHash:
      type: string
      description: The request hash of the UserOperation.
    entryPoint:
      $ref: '#/EntryPoint'
    sender:
      type: string
      format: address
      description: The account initiating the UserOperation.
    nonce:
      type: integer
      format: int256
      description: The nonce used in the UserOperation.
    paymaster:
      type: string
      format: address
      description: The paymaster used for this UserOperation (or empty).
    actualGasCost:
      type: integer
      format: int256
      description: The actual amount paid (by account or paymaster) for this UserOperation.
    actualGasUsed:
      type: integer
      format: int256
      description: The total gas used by this UserOperation (including preVerification, creation, validation, and execution).
    success:
      type: boolean
      description: Indicates whether the execution completed without reverting.
    reason:
      type: string
      description: In case of revert, this is the revert reason.
    logs:
      type: array
      items:
        type: string
      description: The logs generated by this UserOperation (not including logs of other UserOperations in the same bundle).
    receipt:
      $ref: ../evm_responses.yaml#/transaction_receipt
      description: The TransactionReceipt object for the entire bundle, not only for this UserOperation.

EntryPoint:
  $ref: '#/Hex'
  title: Entrypoint Address
  description: The entrypoint address the request should be sent through. This MUST be one of the entry points returned by the `supportedEntryPoints` rpc call.
  default: '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789'
