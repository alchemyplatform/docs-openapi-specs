openapi: 3.1.0
info:
  title: eth_getLogs - Optimism
  version: '1.0'
servers:
  - url: 'https://{network}.g.alchemy.com/v2/'
      variables:
        network:
          enum:
          - opt-mainnet
          - opt-goerli
          default: opt-mainnet
paths:
  /{apiKey}:
    post:
      summary: eth_getLogs - Optimism
      $ref: ../ethereum/eth_getLogs.yaml#/components/pathItems/path/post
      operationId: eth-getlogs-optimism
      x-readme:
        samples-languages:
          - curl
          - javascript
          - python
        code-samples:
          - language: javascript
            name: Alchemy SDK
            code: |
              // Setup: npm install alchemy-sdk
              // Github: https://github.com/alchemyplatform/alchemy-sdk-js
              import { Network, Alchemy } from "alchemy-sdk";

              // Optional config object, but defaults to demo api-key and eth-mainnet.
              const settings = {
                apiKey: "demo", // Replace with your Alchemy API Key.
                network: Network.OPT_MAINNET, // Replace with your network.
              };
              const alchemy = new Alchemy(settings);

              // Get logs for a certain address, with specified topics and blockHash
              alchemy.core
                .getLogs({
                  address: "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                  topics: [
                    "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  ],
                  blockHash:
                    "0x49664d1de6b3915d7e6fa297ff4b3d1c5328b8ecf2ff0eefb912a4dc5f6ad4a0",
                })
                .then(console.log);
          - language: python
            name: Web3.py
            code: |
              # Installation Instructions: https://web3py.readthedocs.io/en/latest/quickstart.html#installation

              from web3 import Web3, HTTPProvider

              #Replace with your Alchemy API key:
              apiKey = "demo"

              # Initialize a Web3.py instance
              web3 = Web3(Web3.HTTPProvider('https://opt-mainnet.alchemy.com/v2/'+apiKey))

              # Query the blockchain (replace example parameters)
              logs = web3.eth.get_logs({
                'fromBlock': 1000000, 
                'toBlock': 1000100, 
                'address': '0x6C8f2A1'
                }) 

              # Print the output to console
              print(logs)
