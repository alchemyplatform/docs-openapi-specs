# To Update:
# rdme openapi v1.yaml --key=<key> --id=67cb0078f56864003061cf66
openapi: 3.1.0
info:
  title: 🧠 Data
  version: "1.0"
servers: # servers are also specified at the method level, if there isn't a specification then the server is supported on all the networks below
  - url: https://api.g.alchemy.com/data/v1
x-sandbox:
  category:
    type:
      $ref: '../components/sandbox.yaml#/Category' # change the path to "../components/sandbox.yaml#/Category" if updating the spec from CLI
    value: token
paths:
  ####################################################
  # Multi-Chain Token APIs
  ####################################################
  "/{apiKey}/assets/tokens/by-address":
    post:
      summary: Tokens By Wallet
      description: >
        Fetches current balances, prices, and metadata for multiple addresses using network and address pairs. Returns a list of token balances, each containing the network and address. This endpoint is supported on Ethereum, Solana, and 30+ EVM chains. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).
      tags: ["🆕 Multi-Chain Token APIs (Beta)"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ByAddressRequestWithOptions"
      responses:
        "200":
          description: Successful response!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokensResponse"
        "400":
          description: 'Bad Request: Invalid input (e.g., malformed JSON).'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: 'Too Many Requests: Rate limit exceeded.'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      operationId: get-tokens-by-address
  "/{apiKey}/assets/tokens/balances/by-address":
    post:
      summary: Token Balances By Wallet
      description: >
        Fetches current balances for multiple addresses using network and address pairs. Returns a list of token balances, each containing the network and address. This endpoint is supported on Ethereum, Solana, and 30+ EVM chains. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens)
      tags: ["🆕 Multi-Chain Token APIs (Beta)"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ByAddressRequestWith3PairsAnd20Networks"
      responses:
        "200":
          description: Successful response!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenBalancesResponse"
        "400":
          description: 'Bad Request: Invalid input (e.g., malformed JSON).'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: 'Too Many Requests: Rate limit exceeded.'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      operationId: get-token-balances-by-address
  ####################################################
  # Multi-Chain NFT APIs
  ####################################################
  "/{apiKey}/assets/nfts/by-address":
    post:
      summary: NFTs By Owner
      description: >
        Retrieves all NFTs currently owned by multiple addresses using network and address pairs. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).
      tags: ["🆕 Multi-Chain NFT APIs (Beta)"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ByAddressRequestWithNFTOptionsAndPaging"
      responses:
        "200":
          description: Successful response!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NFTByOwnerResponse"
        "400":
          description: 'Bad Request: Invalid input (e.g., malformed JSON).'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: 'Too Many Requests: Rate limit exceeded.'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      operationId: get-nfts-by-address
  "/{apiKey}/assets/nfts/contracts/by-address":
    post:
      summary: Contracts By Owner
      description: >
        Retrieves all NFT contracts currently owned by multiple addresses using network and address pairs. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).
      tags: ["🆕 Multi-Chain NFT APIs (Beta)"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ByAddressRequestWithNFTOptions"
      responses:
        "200":
          description: Successful response!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NFTByOwnerResponse"
        "400":
          description: 'Bad Request: Invalid input (e.g., malformed JSON).'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: 'Too Many Requests: Rate limit exceeded.'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      operationId: get-nft-contracts-by-address
  ####################################################
  # Transaction History API
  ####################################################
  "/{apiKey}/transactions/history/by-address":
    post:
      summary: Transaction History By Wallet
      description: >
        Fetches all transactions addresses using network and address pairs (currently limited to 1 in BETA) Returns a list of transaction objects. This endpoint will be supported on Ethereum, Solana, and 30+ EVM chains (currently limited to ETH and Base)
      tags: ["🆕 Multi-Chain Transaction History APIs (Beta)"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ByAddressRequestWith1AddressAnd2Networks"
      responses:
        "200":
          description: Successful response!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionHistoryResponse"
        "400":
          description: 'Bad Request: Invalid input (e.g., malformed JSON).'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: 'Too Many Requests: Rate limit exceeded.'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      operationId: get-transaction-history-by-address
  ####################################################
  # NFT APIs  (Deprecated / Older)
  ####################################################
  # NOTE: This should be hidden from the user.
  "/{apiKey}/assets/nfts":
    post:
      summary: Placeholder for NFT API
      description: >
        Placeholder for the NFT API - in order to update this you'll need to move it back and forth.
      tags: ["🎨 NFT API"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ByAddressRequest"
      responses:
        "200":
          description: Successful response!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenPricesResponse"
      operationId: get-nfts-by-address-placeholder
  ####################################################
  # Tokens APIs (Deprecated / Older)
  ####################################################
  # NOTE: This should be hidden from the user.
  "/{apiKey}/assets/tokens":
    post:
      summary: Placeholder for Tokens API
      description: >
        Placeholder for the Prices API - in order to update this you'll need to move it back and forth.
      tags: ["🪙 Token API"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ByAddressRequest"
      responses:
        "200":
          description: Successful response!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenPricesResponse"
      operationId: get-tokens-by-address-placeholder
  ####################################################
  # Prices APIs
  ####################################################
  # NOTE: This should be hidden from the user.
  "/{apiKey}/assets/prices":
    post:
      summary: Placeholder for Prices API
      description: >
        Placeholder for the Prices API - in order to update this you'll need to move it back and forth.
      tags: ["📈 Prices API"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ByAddressRequest"
      responses:
        "200":
          description: Successful response!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenPricesResponse"
        "400":
          description: 'Bad Request: Invalid input (e.g., malformed JSON).'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: 'Too Many Requests: Rate limit exceeded.'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      operationId: get-tokens-prices-by-address-placeholder
  ####################################################
  # Transfer API (Deprecated / Older)
  ####################################################
  # NOTE: This should be hidden from the user.
  "/{apiKey}/assets/transfers":
    post:
      summary: Placeholder for Transfers API
      description: >
        Placeholder for the Transfers API - in order to update this you'll need to move it back and forth.
      tags: ["💸 Transfers API"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ByAddressRequest"
      responses:
        "200":
          description: Successful response!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenPricesResponse"
        "400":
          description: 'Bad Request: Invalid input (e.g., malformed JSON).'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: 'Too Many Requests: Rate limit exceeded.'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      operationId: get-transfers-by-address-placeholder
  ####################################################
  # Utility APIs
  ####################################################
  "/{apiKey}/utility/blocks/by-timestamp":
    get:
      summary: Blocks by Timestamp
      description: Fetches the first block before or after a given timestamp. Returns the block's number and on-chain timestamp.
      tags: ["🛠️ Utility APIs"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
        - $ref: '#/components/schemas/networks'
        - $ref: '#/components/schemas/timestamp'
        - $ref: '#/components/schemas/direction'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockTimestampResponse"
        "400":
          description: 'Bad Request: Malformed request or missing parameters.'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: 'Too Many Requests: Rate limit exceeded.'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      operationId: blocks-by-timestamp
  ####################################################
  # Subgraphs
  ####################################################
  # NOTE: This should be hidden from the user.
  "/{apiKey}/subgraphs":
    post:
      summary: Placeholder for Subgraphs
      description: >
        Placeholder for the Subgraphs - in order to update this you'll need to move it back and forth.
      tags: ["🍊 Subgraphs"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ByAddressRequest"
      responses:
        "200":
          description: Successful response!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenPricesResponse"
      operationId: subgraphs-placeholder
  ####################################################
  # Webhooks
  ####################################################
  # NOTE: This should be hidden from the user.
  "/{apiKey}/assets/webhooks":
    post:
      summary: Placeholder for Webhooks
      description: >
        Placeholder for the Webhooks - in order to update this you'll need to move it back and forth.
      tags: ["🔔 Webhooks"]
      x-readme:
        samples-languages:
          - javascript
          - curl
          - python
          - go
      parameters:
        - $ref: '#/components/schemas/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ByAddressRequest"
      responses:
        "200":
          description: Successful response!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenPricesResponse"
      operationId: webhooks-placeholder
####################################################
# Common Components for All APIs
####################################################
components:
  schemas:
  ####################################################
  # Common Components
  ####################################################
    apiKey:
      name: apiKey
      in: path
      schema:
        type: string
        default: docs-demo
        description: |
          <style>
            .custom-style {
              color: #048FF4;
            }
          </style>
          For higher throughput, <span class="custom-style"><a href="https://alchemy.com/?a=docs-demo" target="_blank">create your own API key</a></span>
      required: true
    # TODO(peter): Annoyingly this doesn't work and defaults to string. Debug this eventually.
    #
    #withMetadataField:
    #  description: 'Boolean - if set to `true`, returns metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.'
    #  type: boolean
    #  default: true
    #withPrices:
    #  name: withPrices
    #  description: 'Boolean - if set to `true`, returns token prices. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.'
    #  schema:
    #    type: boolean
    #    default: true
    networks:
      name: networks
      description: |
        <style>
          .custom-style {
            color: #048FF4;
          }
        </style>
        Array of networks to query on. The response will be an array with one block per network. Find network enums <span class="custom-style"><a href="https://dashboard.alchemy.com/chains" target="_blank">here</a></span>
      schema:
        type: array
        minItems: 1
        maxItems: 3
        items:
          type: string
          default: eth-mainnet
      in: query
      required: true
    # Networks that NFTs are supported on.
    nftNetworks:
      type: string
      enum:
        - eth-mainnet
        - eth-sepolia
        - eth-holesky
        - avax-mainnet
        - avax-fuji
        - zksync-mainnet
        - opt-mainnet
        - polygon-mainnet
        - polygon-amoy
        - arb-mainnet
        - arb-sepolia
        - blast-mainnet
        - blast-sepolia
        - base-mainnet
        - base-sepolia
        - soneium-mainnet
        - soneium-minato
        - scroll-mainnet
        - scroll-sepolia
        - shape-mainnet
        - shape-sepolia
        - lens-mainnet
        - lens-sepolia
        - starknet-mainnet
        - starknet-sepolia
        - rootstock-mainnet
        - rootstock-testnet
        - linea-mainnet
        - linea-sepolia
        - settlus-septestnet
        - abstract-mainnet
        - abstract-testnet
        - apechain-mainnet
      default: eth-mainnet
    timestamp:
      name: timestamp
      description: Unix or ISO timestamp
      schema:
        type: string
        default: 2025-02-28T19:38:57Z
      required: true
      in: query
    direction:
      name: direction
      required: true
      description: Return the first block "BEFORE" or "AFTER" the provided timestamp
      schema:
        type: string
        enum:
          - BEFORE
          - AFTER
        default: AFTER
      in: query
  ####################################################
  # Common Requests
  ####################################################
    ByAddressRequest:
      type: object
      properties:
        addresses:
          type: array
          minItems: 1
          maxItems: 2
          description: >
            Array of address and networks pairs (limit 2 pairs, max 5 networks each). Networks should match network enums.
          items:
            $ref: "#/components/schemas/AddressItem"
      required:
        - addresses

    ByAddressRequestWith1AddressAnd2Networks:
      type: object
      properties:
        addresses:
          type: array
          minItems: 1
          maxItems: 1
          description: >
            Array of address and networks pairs (limit 1 pairs, max 2 networks). Networks should match network enums.
          items:
            $ref: "#/components/schemas/AddressItemTransactionHistory"
        before:
          type: string
          description: 'The cursor that points to the previous set of results.'
        after:
          type: string
          description: 'The cursor that points to the end of the current set of results.'
        limit:
          type: integer
          description: 'Sets the maximum number of items per page (Max: 100)'
          default: 25
      required:
        - addresses

    ByAddressRequestWith3PairsAnd20Networks:
      type: object
      properties:
        addresses:
          type: array
          minItems: 1
          maxItems: 3
          description: >
            Array of address and networks pairs (limit 3 pairs, max 20 networks each). Networks should match network enums.
          items:
            $ref: "#/components/schemas/AddressItemWith20Maximum"
      required:
        - addresses

    ByAddressRequestWithOptions:
      type: object
      properties:
        addresses:
          type: array
          minItems: 1
          maxItems: 2
          description: >
            Array of address and networks pairs (limit 2 pairs, max 5 networks each). Networks should match network enums.
          items:
            $ref: "#/components/schemas/AddressItem"
        withMetadata:
          description: 'Boolean - if set to `true`, returns metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.'
          type: boolean
          default: true
        withPrices:
          description: 'Boolean - if set to `true`, returns token prices. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.'
          type: boolean
          default: true
      required:
        - addresses

    ByAddressRequestWithNFTOptionsAndPaging:
      type: object
      properties:
        addresses:
          type: array
          minItems: 1
          maxItems: 2
          description: >
            Array of address and networks pairs (limit 2 pairs, max 15 networks each). Networks should match network enums.
          items:
            $ref: "#/components/schemas/AddressItemForNFTOwnership"
        withMetadata:
          description: 'Boolean - if set to `true`, returns metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.'
          type: boolean
          default: true
        pageKey:
          $ref: '../nft/nfts.yaml#/components/schemas/pageKey'
        pageSize:
          $ref: '../nft/nfts.yaml#/components/schemas/pageSize'
      required:
        - addresses

    ByAddressRequestWithNFTOptions:
      type: object
      properties:
        addresses:
          type: array
          minItems: 1
          maxItems: 2
          description: >
            Array of address and networks pairs (limit 2 pairs, max 5 networks each). Networks should match network enums.
          items:
            $ref: "#/components/schemas/AddressItem"
        withMetadata:
          description: 'Boolean - if set to `true`, returns metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.'
          type: boolean
          default: true
      required:
        - addresses

    AddressItem:
      type: array
      properties:
        address:
          type: string
          description: Wallet address.
          example: "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152"
          default: "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152"
        networks:
          type: array
          minItems: 1
          maxItems: 5
          default:
            - eth-mainnet
            - base-mainnet
            - matic-mainnet
          items:
            type: string
            default: eth-mainnet
          description: |
            <style>
              .custom-style {
                color: #048FF4;
              }
            </style>
            Network identifier (e.g., eth-mainnet). Find more network enums <span class="custom-style"><a href="https://dashboard.alchemy.com/chains" target="_blank">here</a></span>
      required:
        - address
        - networks

    AddressItemForNFTOwnership:
      type: array
      properties:
        address:
          type: string
          description: Wallet address.
          example: "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152"
          default: "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152"
        networks:
          type: array
          minItems: 1
          maxItems: 5
          default:
            - eth-mainnet
            - base-mainnet
            - matic-mainnet
          items:
            $ref: "#/components/schemas/nftNetworks"
          description: |
            <style>
              .custom-style {
                color: #048FF4;
              }
            </style>
            Network identifier (e.g., eth-mainnet). Find more network enums <span class="custom-style"><a href="https://dashboard.alchemy.com/chains" target="_blank">here</a></span>        
        excludeFilters:
          $ref: '../nft/nfts.yaml#/components/schemas/excludeFilters'
        includeFilters:
          $ref: '../nft/nfts.yaml#/components/schemas/includeFilters'
        spamConfidenceLevel:
          $ref: '../nft/nfts.yaml#/components/schemas/spamConfidenceLevel'
      required:
        - address
        - networks

    AddressItemTransactionHistory:
      type: array
      properties:
        address:
          type: string
          description: Wallet address.
          example: "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152"
          default: "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152"
        networks:
          type: array
          minItems: 1
          maxItems: 2
          default:
            - eth-mainnet
            - base-mainnet
          items:
            type: string
            default: eth-mainnet
          description: |
            <style>
              .custom-style {
                color: #048FF4;
              }
            </style>
            (In BETA and only accepts ETH & BASE mainnets). Network identifier (e.g., eth-mainnet). Find more network enums <span class="custom-style"><a href="https://dashboard.alchemy.com/chains" target="_blank">here</a></span>
      required:
        - address
        - networks

    AddressItemWith20Maximum:
      type: array
      properties:
        address:
          type: string
          description: Wallet address.
          example: "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152"
          default: "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152"
        networks:
          type: array
          minItems: 1
          maxItems: 20
          default:
            - eth-mainnet
            - base-mainnet
            - matic-mainnet
          items:
            type: string
            default: eth-mainnet
          description: |
            <style>
              .custom-style {
                color: #048FF4;
              }
            </style>
            Network identifier (e.g., eth-mainnet). Find more network enums <span class="custom-style"><a href="https://dashboard.alchemy.com/chains" target="_blank">here</a></span>
      required:
        - address
        - networks

    AddressItemWith2Maximum:
      type: array
      properties:
        address:
          type: string
          description: Wallet address.
          example: "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152"
          default: "0x1E6E8695FAb3Eb382534915eA8d7Cc1D1994B152"
        networks:
          type: array
          minItems: 1
          maxItems: 2
          default:
            - eth-mainnet
            - base-mainnet
          items:
            type: string
            default: eth-mainnet
          description: |
            <style>
              .custom-style {
                color: #048FF4;
              }
            </style>
            Network identifier (e.g., eth-mainnet). Find more network enums <span class="custom-style"><a href="https://dashboard.alchemy.com/chains" target="_blank">here</a></span>
      required:
        - address
        - networks

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
              description: Detailed error message.
          required:
            - message
          description: Error details.
      required:
        - error
  ####################################################
  # Token APIs
  ####################################################
    TokensResponse:
      type: object
      properties:
        data:
          type: array
          description: List of tokens by address, with prices and metadata.
          items:
            $ref: "#/components/schemas/TokensResponseItem"
            # should references prices for the prices one.
      required:
        - data

    TokensResponseItem:
      type: object
      properties:
        network:
          type: string
          description: Network identifier.
        address:
          type: string
          description: Wallet address.
        tokenAddress:
          type: string
          description: Token address.
        tokenBalance:
          type: string
          description: Balance of that particular token.
        tokenMetadata:
          $ref: ../evm_body.yaml#/alchemy_getTokenMetadata
        tokenPrices:
          $ref: "../prices/prices.yaml#/components/schemas/AddressPriceResponseItem"
      required:
        - network
        - address
        - tokenAddress
        - tokenBalance
    TokenBalancesResponse:
      type: object
      properties:
        data:
          type: array
          description: List of token balances by address.
          items:
            $ref: "#/components/schemas/TokenBalancesResponseItem"
      required:
        - data

    TokenBalancesResponseItem:
      type: object
      properties:
        network:
          type: string
          description: Network identifier.
        address:
          type: string
          description: Wallet address.
        tokenAddress:
          type: string
          description: Token address.
        tokenBalance:
          type: string
          description: Balance of that particular token.
      required:
        - network
        - address
        - tokenAddress
        - tokenBalance

  ####################################################
  # NFT APIs
  ####################################################
    NFTByOwnerResponse:
      type: object
      properties:
        data:
          type: object
          description: List of nfts by address with appropriate metadata.
          # No validAt for the multi-chain version, for now.
          ownedNfts:
            type: array
            items:
              $ref: "#/components/schemas/NFTResponseItem"
            totalCount:
              $ref: '../nft/nfts.yaml#/components/schemas/totalNFTCount'
            pageKey:
              $ref: '../nft/nfts.yaml#/components/schemas/pageKey'
      required:
        - data

    # Similar to ownedNFTv3, just with extra address and network identifiers.
    NFTResponseItem:
      type: object
      description: 'The object that represents an NFT and has all data corresponding to that NFT'
      properties:
        network:
          type: string
          description: Network identifier.
        address:
          type: string
          description: Wallet address.
        contract:
          $ref: '../nft/nfts.yaml#/components/schemas/contractv3'
        tokenId:
          $ref: '../nft/nfts.yaml#/components/schemas/tokenIdV3'
        tokenType:
          $ref: '../nft/nfts.yaml#/components/schemas/tokenType'
        name:
          type: string
          description: 'String - Name of the NFT asset.'
        description:
          type: string
          description: 'String - Brief human-readable description'
        image:
          $ref: '../nft/nfts.yaml#/components/schemas/imagev3'
        raw:
          $ref: '../nft/nfts.yaml#/components/schemas/rawv3'
        collection:
          $ref: '../nft/nfts.yaml#/components/schemas/collectionv3'
        tokenUri:
          type: string
          description: "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated."
        timeLastUpdated:
          type: string
          description: 'String - ISO timestamp of the last cache refresh for the information returned in the metadata field.'
        acquiredAt:
          $ref: '../nft/nfts.yaml#/components/schemas/acquiredAt'

    ContractsByOwnerResponse:
      type: object
      properties:
        data:
          type: object
          description: List of nfts by address with appropriate metadata.
          # No validAt for the multi-chain version, for now.
          contracts:
            type: array
            items:
              $ref: '../nft/nfts.yaml#/components/schemas/ownedContractv3'
            # totalCount:
            #  $ref: '../nft/nfts.yaml#/components/schemas/totalNFTCount'
            # pageKey:
            #   $ref: '../nft/nfts.yaml#/components/schemas/pageKey'
      required:
        - data
  ####################################################
  # Transaction History APIs
  ####################################################
    TransactionHistoryResponse:
      type: object
      properties:
        before:
          type: string
          description: 'The cursor that points to the previous set of results.'
        after:
          type: string
          description: 'The cursor that points to the end of the current set of results.'
        totalCount:
          type: integer
          description: 'Total count of the response items.'
        transctions:
          type: array
          description: List of transactions by address.
          items:
            $ref: "#/components/schemas/TransactionHistoryResponseItem"
      required:
        - transactions

    TransactionHistoryResponseItem:
      type: object
      properties:
        network:
          type: string
          description: "Network associated with an individual transaction"
        hash:
          type: string
          description: 'Transaction hash'
        timeStamp:
          type: string
          description: '(ISO 8601)  Timestamp of transaction mining / confirmation'
        blockNumber:
          type: integer
          description: 'Block number of transaction mining / confirmation'
        blockHash:
          type: string
          description: 'Block hash of transaction mining / confirmation'
        nonce:
          type: integer
          description: 'Transaction nonce'
        transactionIndex:
          type: integer
          description: 'Position of transaction within a block'
        fromAddress:
          type: string
          description: 'From address of transaction (hex string).'
        toAddress:
          type: string
          description: 'To address of transaction (hex string). null if contract creation.'
        contractAddress:
          type: string
          description: '20 Bytes - The contract address created, if the transaction was a contract creation, otherwise null'
        value:
          type: string
          description: "(uint8) Value of native token value moved within the external transaction"
        cumulativeGasUsed:
          type: string
          description: The total amount of gas used when this transaction was executed in the block.
        effectiveGasPrice:
          type: string
          description: Gas price parameter
        gasUsed:
          type: string
          description: The amount of gas used by this specific transaction alone
        logs:
          type: array
          description: 'Array of log objects, which this transaction generated'
          items:
            $ref: '#/components/schemas/txn_history_log_object'
        internalTxns:
          type: array
          description: 'Array of internal transaction objects, which this transaction generated'
          items:
            $ref: '#/components/schemas/txn_history_trace_object'

    txn_history_trace_object:
      type: object
      properties:
        type:
          type: string
          description: CALL or CREATE
        fromAddress:
          type: string
          description: 20 Bytes - address of the sender
        toAddress:
          type: string
          description: 20 Bytes - address of the receiver. null when its a contract creation transaction
        value:
          type: string
          description: amount of value for transfer (in hex)
        gas:
          type: string
          description: amount of gas provided for the call (in hex)
        gasUsed:
          type: string
          description: amount of gas used during the call (in hex)
        input:
          type: string
          description: call data
        output:
          type: string
          description: return data
        error:
          type: string
          description: error, if any
        revertReason:
          type: string
          description: solidity revert reason, if any

    txn_history_log_object:
      type: object
      properties:
        contractAddress:
          type: string
          description: 20 Bytes - contract address from which this log originated.
        logIndex:
          type: string
          description: Integer of the log index position in the block. null when its pending log.
        data:
          type: string
          description: Contains one or more 32 Bytes non-indexed arguments of the log.
        removed:
          type: boolean
          description: 'true when the log was removed, due to a chain reorganization. false if its a valid log.'
        topics:
          type: array
          items:
            type: string
          description: 'Array of zero to four 32 Bytes DATA of indexed log arguments'

  ####################################################
  # Prices APIs
  ####################################################
    TokenPricesResponse:
      type: object
      properties:
        data:
          type: array
          description: List of token price data.
          items:
            $ref: "#/components/schemas/TokenPriceResponseItem"
      required:
        - data

    TokenPriceResponseItem:
      type: object
      properties:
        symbol:
          type: string
          description: Token symbol.
        prices:
          type: array
          description: List of price information.
          items:
            $ref: "#/components/schemas/Price"
        error:
          type: string
          nullable: true
          description: Error message if applicable.
      required:
        - symbol
        - prices
        - error
    Price:
      type: object
      properties:
        currency:
          type: string
          description: Currency code (e.g., USD).
        value:
          type: string
          description: Price value as a string.
        lastUpdatedAt:
          type: string
          format: date-time
          description: Time when the price was last updated.
      required:
        - currency
        - value
        - lastUpdatedAt

    AddressPricesResponse:
      type: object
      properties:
        data:
          type: array
          description: List of token prices by address.
          items:
            $ref: "#/components/schemas/AddressPriceResponseItem"
      required:
        - data

    AddressPriceResponseItem:
      type: object
      properties:
        network:
          type: string
          description: Network identifier.
        address:
          type: string
          description: Token contract address.
        prices:
          type: array
          description: List of price information.
          items:
            $ref: "#/components/schemas/Price"
        error:
          type: string
          nullable: true
          description: Error message if applicable.
      required:
        - network
        - address
        - prices
        - error

    HistoricalPricesRequest:
      type: object
      description: >
        Request body for fetching historical token prices. Provide either the token `symbol` or both `network` and `address`, along with the required time range parameters.
      oneOf:
        - required: ["symbol", "startTime", "endTime"]
          properties:
            symbol:
              type: string
              description: Token symbol (e.g., ETH, BTC).
              example: "ETH"
              default: "ETH"
            startTime:
              oneOf:
                - type: string
                  format: date-time
                  description: Start of the time range in ISO 8601 format.
                  default: "2024-01-01T00:00:00Z"
                - type: number
                  description: Start of the time range as a timestamp in seconds since epoch.
                  default: 1704067200  # Equivalent to "2024-01-01T00:00:00Z"
              description: Start of the time range.
              example: "2024-01-01T00:00:00Z"
            endTime:
              oneOf:
                - type: string
                  format: date-time
                  description: End of the time range in ISO 8601 format.
                  default: "2024-01-31T23:59:59Z"
                - type: number
                  description: End of the time range as a timestamp in seconds since epoch.
                  default: 1706745599  # Equivalent to "2024-01-31T23:59:59Z"
              description: End of the time range.
              example: "2024-01-31T23:59:59Z"
            interval:
              type: string
              description: >
                Time interval for data points. Max ranges: (5m, 7d), (1h, 30d), (1d, 1yr)
              enum: [ "5m", "1h", "1d" ]
              default: "1d"
              example: "1d"
        - required: ["network", "address", "startTime", "endTime"]
          properties:
            network:
              type: string
              description: Network identifier (e.g., eth-mainnet).
              example: "eth-mainnet"
              default: "eth-mainnet"
            address:
              type: string
              description: Token contract address.
              example: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
              default: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
            startTime:
              oneOf:
                - type: string
                  format: date-time
                  description: Start of the time range in ISO 8601 format.
                  default: "2024-01-01T00:00:00Z"
                - type: number
                  description: Start of the time range as a timestamp since epoch.
                  default: 1704067200  # Equivalent to "2024-01-01T00:00:00Z"
              description: Start of the time range.
              example: "2024-01-01T00:00:00Z"
            endTime:
              oneOf:
                - type: string
                  format: date-time
                  description: End of the time range in ISO 8601 format.
                  default: "2024-01-31T23:59:59Z"
                - type: number
                  description: End of the time range as a timestamp since epoch.
                  default: 1706745599  # Equivalent to "2024-01-31T23:59:59Z"
              description: End of the time range.
              example: "2024-01-31T23:59:59Z"
            interval:
              type: string
              description: >
                Time interval for data points. Max ranges: (5m, 7d), (1h, 30d), (1d, 1yr)
              enum: [ "5m", "1h", "1d" ]
              default: "1d"
              example: "1d"

    HistoricalPricesResponse:
      type: object
      description: >
        Response containing historical price data. It will either include `symbol` or both `network` and `address` based on the request.
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/HistoricalPricesBySymbol"
            - $ref: "#/components/schemas/HistoricalPricesByAddress"
      required:
        - data

    HistoricalPricesBySymbol:
      type: object
      properties:
        symbol:
          type: string
          description: Token symbol.
          example: "ETH"
          default: "ETH"
        prices:
          type: array
          description: List of historical price data points.
          items:
            $ref: "#/components/schemas/HistoricalPriceItem"
      required:
        - symbol
        - prices

    HistoricalPricesByAddress:
      type: object
      properties:
        network:
          type: string
          description: Network identifier.
          example: "eth-mainnet"
          default: "eth-mainnet"
        address:
          type: string
          description: Token contract address.
          example: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
          default: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
        prices:
          type: array
          description: List of historical price data points.
          items:
            $ref: "#/components/schemas/HistoricalPriceItem"
      required:
        - network
        - address
        - prices

    HistoricalPriceItem:
      type: object
      properties:
        value:
          type: string
          description: Price value as a string.
          example: "1900.00"
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the price data point.
          example: "2024-01-01T00:00:00Z"
      required:
        - value
        - timestamp

  ####################################################
  # Utility APIs
  ####################################################
    BlockTimestampResponse:
      type: object
      properties:
        data:
          type: array
          description: List of blocks
          items:
            $ref: "#/components/schemas/BlockTimestampResponseItem"
      required:
        - data

    BlockTimestampResponseItem:
      type: object
      properties:
        network:
          type: string
          description: Network identifier
        block:
          type: object
          properties:
            number:
              type: integer
              description: Block number
            timestamp:
              type: string
              description: ISO timestamp of the block
          required:
            - number
            - timestamp
      required:
        - network
        - block
