openapi: 3.1.0
info:
  title: eth call - Ethereum
  description: Executes a new message call immediately without creating a transaction on the block chain.
  version: '1.0'
servers:
  - url: 'https://eth-mainnet.g.alchemy.com/v2'
paths:
  /{apiKey}:
    $ref: '#/components/pathItems/path'
components:
  pathItems:
    path:
      post:
        operationId: eth-call
        summary: eth_call - Ethereum
        description: Executes a new message call immediately without creating a transaction on the block chain.
        parameters:
          - name: apiKey
            in: path
            schema:
              type: string
              default: docs-demo
              description: |
                <style>
                  .custom-style {
                    color: #048FF4;
                  }
                </style>
                For higher throughput, <span class="custom-style"><a href="https://alchemy.com/?a=docs-demo" target="_blank">create your own API key</a></span>
            required: true
        requestBody:
          description: Accepts the transaction call object, state overrides and the block number / block hash / block tag to execute the call on.
          content:
            application/json:
              schema:
                $ref: ../evm_body.yaml#/eth_call_550_gas
        x-readme:
          explorer-enabled: false
          samples-languages:
            - curl
            - javascript
            - python
          code-samples:
            - language: javascript
              name: Alchemy SDK
              code: |
                // Setup: npm install alchemy-sdk
                // Github: https://github.com/alchemyplatform/alchemy-sdk-js
                import { Network, Alchemy } from "alchemy-sdk";

                // Optional config object, but defaults to demo api-key and eth-mainnet.
                const settings = {
                  apiKey: "demo", // Replace with your Alchemy API Key.
                  network: Network.ETH_MAINNET, // Replace with your network.
                };
                const alchemy = new Alchemy(settings);

                // Make a sample eth_call
                alchemy.core
                  .call({
                    to: "0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41",
                    gas: "0x76c0",
                    gasPrice: "0x9184e72a000",
                    data: "0x3b3b57debf074faa138b72c65adbdcfb329847e4f2c04bde7f7dd7fcad5a52d2f395a558",
                  })
                  .then(console.log);
            - language: python
              code: "from web3 import Web3, HTTPProvider\r\n\r\n#Replace with your Alchemy API key:\r\napiKey = \"demo\"\r\n\r\n# Initialize a Web3.py instance\r\nweb3 = Web3(Web3.HTTPProvider('https://eth-mainnet.g.alchemy.com/v2 /'+apiKey))\r\n\r\n# Query the blockchain (replace example parameters)\r\ndata = web3.eth.call({\r\n\t\t'value': 0, \r\n\t\t'gas': 21736, \r\n\t\t'maxFeePerGas': 2000000000, \r\n\t\t'maxPriorityFeePerGas': 1000000000, \r\n\t\t'to': '0xc305c90',\r\n\t\t'data': '0x477a5c98'\r\n\t\t}) \r\n\r\n# Print the output to console\r\nprint(data)"
              name: web3.py
        responses:
          '200':
            description: The result of the call.
            content:
              application/json:
                schema:
                  $ref: ../evm_responses.yaml#/eth_call
