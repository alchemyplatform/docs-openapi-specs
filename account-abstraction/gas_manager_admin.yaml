openapi: 3.1.0
info:
  title: ü™Ñ Gas Manager Admin API
  version: '1.0'
servers:
  - url: https://manage.g.alchemy.com/
x-sandbox:
  category: Gas Manager
paths:
  '/api/gasManager/policy':
    post:
      tags: ['Gas Manager Admin API Endpoints']
      summary: Create Policy
      description: Creates a new gas manager policy with the specified rules. Returns the policy id of a successfully created policy. The newly created policy will be in the ‚Äúinactive‚Äù status.
      operationId: create-policy
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                policyName:
                  type: string
                  description: Name of the policy
                  default: 'My Policy'
                policyType:
                  type: string
                  description: Type of the policy
                  default: 'SPONSORSHIP'
                appId:
                  type: string
                  description: ID for the app associated with the new policy
                  default: '6d834x9k1yh4dx6z'
                rules:
                  description: Rules for the policy
                  $ref: './account-abstraction/schemas.yaml#/components/schemas/Rules' # path for using github actions, use "./schemas.yaml#/components/schemas/Rules" to update from CLI
      responses:
        '200':
          description: Policy created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      policy:
                        $ref: './account-abstraction/schemas.yaml#/components/schemas/Policy' # path for using github actions, use "./schemas.yaml#/components/schemas/Policy" to update from CLI
                  error:
                    type: object
                    properties:
                      msg:
                        type: string

  '/api/gasManager/policy/{id}':
    get:
      tags: ['Gas Manager Admin API Endpoints']
      summary: Get Policy
      description: Returns a policy by id.
      operationId: get-policy
      security:
        - BearerAuth: []
      parameters:
        - name: id
          description: ID of the policy to be fetched
          in: path
          required: true
          schema:
            type: string
            default: 'a844e221-3c13-40c6-95db-d2db390e14b5'
      responses:
        '200':
          description: Policy fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      policy:
                        $ref: './account-abstraction/schemas.yaml#/components/schemas/Policy' # path for using github actions, use "./schemas.yaml#/components/schemas/Policy" to update from CLI
                  error:
                    type: object
                    properties:
                      msg:
                        type: string

    delete:
      tags: ['Gas Manager Admin API Endpoints']
      summary: Delete Policy
      description: Deletes a policy by id.
      operationId: delete-policy
      security:
        - BearerAuth: []
      parameters:
        - name: id
          description: ID of the policy to be deleted
          in: path
          required: true
          schema:
            type: string
            default: '6d834x9k1yh4dx6z'
      responses:
        '200':
          description: Policy deleted successfully

    put:
      tags: ['Gas Manager Admin API Endpoints']
      summary: Replace Policy
      description: Replaces all rules in an existing policy by id.
      operationId: replace-policy
      security:
        - BearerAuth: []
      parameters:
        - name: id
          description: ID of the policy to be replaced
          in: path
          required: true
          schema:
            type: string
            default: 'a844e221-3c13-40c6-95db-d2db390e14b5'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                policyName:
                  type: string
                  description: Name of the policy
                  default: 'My Policy'
                rules:
                  $ref: './account-abstraction/schemas.yaml#/components/schemas/Rules' # path for using github actions, use "./schemas.yaml#/components/schemas/Rules" to update from CLI
      responses:
        '200':
          description: Policy rules replaced successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      policy:
                        $ref: './account-abstraction/schemas.yaml#/components/schemas/Policy' # path for using github actions, use "./schemas.yaml#/components/schemas/Policy" to update from CLI
                  error:
                    type: object
                    properties:
                      msg:
                        type: string

  '/api/gasManager/policies':
    get:
      tags: ['Gas Manager Admin API Endpoints']
      summary: Get All Policies
      description: Returns all policies under an app. The results are paginated.
      operationId: get-all-policies
      security:
        - BearerAuth: []
      parameters:
        - name: appId
          in: query
          description: An optional app id to filter results by policies associated with that app.
          schema:
            type: string
            default: '6d834x9k1yh4dx6z'
        - name: limit
          in: query
          description: An optional parameter to limit the number of results per page.
          schema:
            type: integer
            default: 10
        - name: before
          in: query
          description: String - used for pagination. If there are previous results, `before` field is returned in the response and can be passed in the request to fetch the previous page.
          schema:
            type: string
        - name: after
          in: query
          description: String - used for pagination. If more results are available `after` field is returned in the response and can be passed in the request to fetch the next page.
          schema:
            type: string
      responses:
        '200':
          description: Policies fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      policies:
                        type: array
                        items:
                          $ref: './account-abstraction/schemas.yaml#/components/schemas/Policy' # path for using github actions, use "./schemas.yaml#/components/schemas/Policy" to update from CLI
                      before:
                        type: string
                        description: String - used for pagination. If there are previous results, `before` field is returned in the response and can be passed in the request to fetch the previous page.
                      after:
                        type: string
                        description: String - used for pagination. If more results are available `after` field is returned in the response and can be passed in the request to fetch the next page.
                  error:
                    type: object
                    properties:
                      msg:
                        type: string

  '/api/gasManager/policy/{id}/status':
    put:
      tags: ['Gas Manager Admin API Endpoints']
      summary: Update Policy Status
      description: Modifies the status of a policy to either "active" or "inactive".
      operationId: update-policy-status
      security:
        - BearerAuth: []
      parameters:
        - name: id
          description: ID of the policy to be updated
          in: path
          required: true
          schema:
            type: string
            default: 'a844e221-3c13-40c6-95db-d2db390e14b5'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  description: The new status of the policy
                  type: string
                  enum: [active, inactive]
                  default: active
      responses:
        '200':
          description: Policy status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      policy:
                        $ref: './account-abstraction/schemas.yaml#/components/schemas/Policy' # path for using github actions, use "./schemas.yaml#/components/schemas/Policy" to update from CLI
                  error:
                    type: object
                    properties:
                      msg:
                        type: string

  '/api/gasManager/policy/{id}/stats':
    get:
      tags: ['Gas Manager Admin API Endpoints']
      summary: Get Policy Stats
      description: Returns stats about a policy specified by ID, including signatures mined, signatures expired, signatures pending, USD mined, and USD pending.
      operationId: get-policy-stats
      security:
        - BearerAuth: []
      parameters:
        - name: id
          description: ID of the policy to be fetched
          in: path
          required: true
          schema:
            type: string
            default: 'a844e221-3c13-40c6-95db-d2db390e14b5'
      responses:
        '200':
          description: Policy stats fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      signaturesMined:
                        type: integer
                        default: 10
                      signaturesExpired:
                        type: integer
                        default: 1
                      signaturesPending:
                        type: integer
                        default: 1
                      usdPending:
                        type: string
                        default: '25.03'
                      usdMined:
                        type: string
                        default: '260.32'
                  error:
                    type: object
                    properties:
                      msg:
                        type: string

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
