openapi: 3.1.0
info:
  title: alchemy_getTokenBalances
  version: '1.0'
servers:
  - url: https://{network}.g.alchemy.com/v2
    variables:
      network:
        enum:
          - eth-mainnet
          - eth-sepolia
          - eth-holesky
          - zksync-mainnet
          - opt-mainnet
          - polygon-mainnet
          - polygon-amoy
          - arb-mainnet
          - arb-sepolia
          - arbnova-mainnet
          - fantom-mainnet
          - fantom-testnet
          - blast-mainnet
          - blast-sepolia
          - base-mainnet
          - base-sepolia
          - scroll-mainnet
          - scroll-sepolia
          - bnb-mainnet
          - bnb-testnet
          - avax-mainnet
          - avax-fuji
          - soneium-mainnet
          - soneium-minato
          - geist-polter
          - gnosis-mainnet
          - gnosis-chiado
          - shape-mainnet
          - shape-sepolia
          - worldchain-mainnet
          - lens-sepolia
          - ink-mainnet
          - ink-sepolia
          - rootstock-mainnet
          - rootstock-testnet
          - linea-mainnet
          - linea-sepolia
          - settlus-septestnet
          - abstract-mainnet
          - abstract-testnet
          - apechain-mainnet
          - unichain-mainnet
          - unichain-sepolia
          - zora-mainnet
          - zora-sepolia
          - berachain-mainnet
          - monad-testnet
        default: eth-mainnet
x-sandbox:
  category:
    type:
      $ref: '../components/sandbox.yaml#/Category'
    value: token
paths:
  /{apiKey}:
    post:
      summary: Token Balances By Wallet
      description: 'alchemy_getTokenBalances - Returns ERC20 token balances for all tokens the given address has ever transacted in with. Optionally accepts a list of contracts. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).'
      tags: []
      parameters:
        - name: apiKey
          in: path
          schema:
            type: string
            default: docs-demo
            description: |
              <style>
                .custom-style {
                  color: #048FF4;
                }
              </style>
              For higher throughput, <span class="custom-style"><a href="https://alchemy.com/?a=docs-demo" target="_blank">create your own API key</a></span>
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../evm_body.yaml#/alchemy_getTokenBalances
      x-readme:
        samples-languages:
          - curl
          - javascript
          - python
        code-samples:
          - language: javascript
            name: Alchemy SDK
            code: |
              // Github: https://github.com/alchemyplatform/alchemy-sdk-js
              // Setup: npm install alchemy-sdk
              import { Network, Alchemy } from "alchemy-sdk";

              // Optional Config object, but defaults to demo api-key and eth-mainnet.
              const settings = {
                apiKey: "demo", // Replace with your Alchemy API Key.
                network: Network.ETH_MAINNET, // Replace with your network.
              };
              const alchemy = new Alchemy(settings);

              const vitalikAddress = "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045";
              const usdcContract = "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48";

              // Print token balances of USDC in Vitalik's address
              alchemy.core.getTokenBalances(vitalikAddress, [usdcContract]).then(console.log);
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: ../evm_responses.yaml#/alchemy_getTokenBalances
      operationId: alchemy-getTokenBalances
