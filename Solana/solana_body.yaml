# ============= Solana API Methods ===============
getBlockHeight:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getBlockHeight
          enum:
            - getBlockHeight
        params:
          type: array
          items:
            type: object
            description: Config object.
            properties:
              commitment:
                $ref: '#/commitment'
getBlock:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getBlock
          enum:
            - getBlock
        params:
          type: array
          items:
            oneOf:
              - type: integer
                description: A slot integer denoting the target block number.
              - type: object
                properties:
                  encoding:
                    $ref: '#/encoding'
                  transactionDetails:
                    type: string
                    description: |
                      Level of transaction detail to return.
                      Accepts one of the following strings:
                      ["full" (Default), "signatures", or "none"]
                    enum:
                      - full
                      - signatures
                      - none
                    default: full
                  rewards:
                    type: boolean
                    description: Whether to populate the rewards array.  true (Default)
                    default: true
                  commitment:
                    $ref: '#/commitment'
                  maxSupportedTransactionVersion:
                    type: integer
                    description: Sets the maximum transaction version.
getBlocks:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getBlocks
          enum:
            - getBlocks
        params:
          type: array
          items:
            - $ref: '#/get_blocks'
get_blocks:
  oneOf:
    - type: integer
      format: int64
      description: (Required) Starting slot integer or (Optional) ending slot integer.
    - type: object
      properties:
        commitment:
          $ref: '#/commitment'
getBlocksWithLimit:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getBlocksWithLimit
          enum:
            - getBlocksWithLimit
        params:
          type: array
          items:
            - $ref: '#/get_blocks'
getBlockTime:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getBlockTime
          enum:
            - getBlockTime
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/block_number'
getBlockCommitment:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getBlockCommitment
          enum:
            - getBlockCommitment
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/block_number'
getBlockProduction:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getBlockProduction
          enum:
            - getBlockProduction
        params:
          type: array
          items:
            type: object
            properties:
              commitment:
                $ref: '#/commitment'
              range:
                type: object
                description: Slot range for block production response. Defaults to to the current epoch.
                required:
                  - firstSlot
                properties:
                  firstSlot:
                    type: integer
                    format: int64
                    description: u64 - First slot to return block production information for (inclusive).
                    default: 165768577
                  lastSlot:
                    type: integer
                    format: int64
                    description: u64 - Last slot to return block production information for (inclusive). Defaults to the highest slot.
                    default: 165768579
                  identity:
                    type: string
                    description: Base-58 Encoded String - Specifies return results for a particular validator identity.
isBlockhashValid:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: isBlockhashValid
          enum:
            - isBlockhashValid
        params:
          type: array
          minItems: 2
          maxitems: 2
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - The blockhash of this block.
              - $ref: '#/configObject'
getAccountInfo:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getAccountInfo
          enum:
            - getAccountInfo
        params:
          type: array
          minItems: 2
          maxitems: 2
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Pubkey of account to query.
              - type: object
                description: Config object.
                properties:
                  encoding:
                    $ref: '#/encoding'
                  dataSlice:
                    $ref: '#/dataSlice'
getBalance:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getBalance
          enum:
            - getBalance
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Pubkey of account to query.
              - $ref: '#/configObject'
getMultipleAccounts:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getMultipleAccounts
          enum:
            - getMultipleAccounts
        params:
          type: array
          minItems: 2
          maxitems: 2
          items:
            oneOf:
              - type: array
                items:
                  type: string
                description: Array of Base-58 Encoded Strings - An array of Pubkeys to query (up to a maximum of 100).
              - type: object
                description: Config object.
                properties:
                  encoding:
                    $ref: '#/encoding'
                  dataSlice:
                    $ref: '#/dataSlice'
                  minContextSlot:
                    $ref: '#/minContextSlot'
getProgramAccounts:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getProgramAccounts
          enum:
            - getProgramAccounts
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded sStrings - Pubkey of program.
              - type: object
                properties:
                  encoding:
                    $ref: '#/encoding'
                  dataSlice:
                    $ref: '#/dataSlice'
                  filters:
                    $ref: '#/filters'
                  withContext:
                    type: boolean
                    description: Wrap the result in an RpcResponse JSON object.
                  minContextSlot:
                    $ref: '#/minContextSlot'
getVoteAccounts:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getVoteAccounts
          enum:
            - getVoteAccounts
        params:
          type: array
          items:
            type: object
            properties:
              commitment:
                $ref: '#/commitment'
              votePubkey:
                type: string
                description: Base-58 Encoded String - Only return results for this validator vote address.
              keepUnstakedDelinquents:
                type: boolean
                default: false
                description: Do not filter out delinquent validators with no stake.
              delinquentSlotDistance:
                type: integer
                format: int64
                description: Specify the number of slots behind the tip that a validator must fall to be considered delinquent.
getLargestAccounts:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getLargestAccounts
          enum:
            - getLargestAccounts
        params:
          type: array
          items:
            type: object
            properties:
              commitment:
                $ref: '#/commitment'
              filter:
                type: string
                default: circulating
                description: Filter results by account type; currently supported - "circulating" or "nonCirculating".
                enum:
                  - circulating
                  - nonCirculating
getClusterNodes:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getClusterNodes
          enum:
            - getClusterNodes
getVersion:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getVersion
          enum:
            - getVersion
getEpochInfo:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getVersion
          enum:
            - getVersion
        params:
          type: array
          items:
            $ref: '#/configObject'
getEpochSchedule:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getEpochSchedule
          enum:
            - getEpochSchedule
getFeeForMessage:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getFeeForMessage
          enum:
            - getFeeForMessage
        params:
          type: array
          description: |
            - message: <Base-64  string> - encoded Message
            - commitment: <object> - (optional) Configures the commitment level of the blocks queried
              Accepts one of the following strings: ["finalized", "confirmed", "processed"] 
              For more info, refer to this doc.
          items:
            type: string
getFirstAvailableBlock:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getFirstAvailableBlock
          enum:
            - getFirstAvailableBlock
getGenesisHash:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getGenesisHash
          enum:
            - getGenesisHash
getHighestSnapshotSlot:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getHighestSnapshotSlot
          enum:
            - getHighestSnapshotSlot
getMinimumBalanceForRentExemption:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getMinimumBalanceForRentExemption
          enum:
            - getMinimumBalanceForRentExemption
        params:
          type: array
          items:
            oneOf:
              - type: integer
                description: usize - Account data length.
              - type: object
                properties:
                  commitment:
                    $ref: '#/commitment'
getRecentPerformanceSamples:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getRecentPerformanceSamples
          enum:
            - getRecentPerformanceSamples
        params:
          type: array
          description: Array of number of samples to return (maximum 720).
          items:
            type: integer
            default: 5
            format: int64
getHealth:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getHealth
          enum:
            - getHealth
getIdentity:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getIdentity
          enum:
            - getIdentity
getInflationGovernor:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getInflationGovernor
          enum:
            - getInflationGovernor
        params:
          type: array
          items:
            type: object
            properties:
              commitment:
                $ref: '#/commitment'
getInflationRate:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getInflationRate
          enum:
            - getInflationRate
getInflationReward:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getInflationReward
          enum:
            - getInflationReward
        params:
          type: array
          items:
            oneOf:
              - type: array
                description: Array of Base-58 Encoded Strings - An array of addresses to query.
                items:
                  type: string
              - type: object
                properties:
                  commitment:
                    $ref: '#/commitment'
                  epoch:
                    type: integer
                    format: int64
                    description: 'u64 - An epoch for which the reward occurs. If omitted, the previous epoch will be used.'
                  minContextSlot:
                    $ref: '#/minContextSlot'
getSupply:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getSupply
          enum:
            - getSupply
        params:
          type: array
          items:
            type: object
            properties:
              commitment:
                $ref: '#/commitment'
              excludeNonCirculatingAccountsList:
                type: boolean
                default: false
                description: Boolean - Excludes non circulating accounts list from response.
getSlot:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getSlot
          enum:
            - getSlot
        params:
          type: array
          items:
            $ref: '#/configObject'
getSlotLeaders:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getSlotLeaders
          enum:
            - getSlotLeaders
        params:
          type: array
          default: [165768577, 5]
          minItems: 2
          maxItems: 2
          description: |
            - u64 - Start slot.
            - u64 - Limit of the number of slot leaders in the response payload.
getMaxRetransmitSlot:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getMaxRetransmitSlot
          enum:
            - getMaxRetransmitSlot
getMaxShredInsertSlot:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getMaxShredInsertSlot
          enum:
            - getMaxShredInsertSlot
minimumLedgerSlot:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: minimumLedgerSlot
          enum:
            - minimumLedgerSlot
getTokenAccountBalance:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getTokenAccountBalance
          enum:
            - getTokenAccountBalance
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Pubkey of queried token account.
              - type: object
                properties:
                  commitment:
                    $ref: '#/commitment'
getTokenAccountsByOwner:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getTokenAccountsByOwner
          enum:
            - getTokenAccountsByOwner
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Pubkey of queried SPL token account owner.
              - oneOf:
                  - type: object
                    properties:
                      mint:
                        type: Base-58 Encoded String - Pubkey of the specific token Mint to limit accounts to.
                  - type: object
                    properties:
                      programId:
                        type: string
                        description: Base-58 Encoded String - Pubkey of the Token program that owns the accounts.
              - type: object
                properties:
                  commitment:
                    $ref: '#/commitment'
                  encoding:
                    $ref: '#/encoding'
                  dataSlice:
                    $ref: '#/dataSlice'
                  minContextSlot:
                    $ref: '#/minContextSlot'
getTokenSupply:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getTokenSupply
          enum:
            - getTokenSupply
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Pubkey of token Mint to query.
              - type: object
                properties:
                  commitment:
                    $ref: '#/commitment'
getSignaturesForAddress:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getSignaturesForAddress
          enum:
            - getSignaturesForAddress
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Account address.
              - type: object
                properties:
                  limit:
                    type: number
                    default: 1000
                    description: 'Maximum transaction signatures to return (between 1 and 1,000, default - 1,000).'
                  before:
                    type: string
                    description: Start searching backwards from this transaction signature. If not provided the search starts from the top of the highest max confirmed block.
                  until:
                    type: string
                    description: 'Search until this transaction signature, if found before limit reached.'
                  commitment:
                    $ref: '#/commitment'
                  minContextSlot:
                    $ref: '#/minContextSlot'
getSignatureStatuses:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getSignatureStatuses
          enum:
            - getSignatureStatuses
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - type: string
                description: Array of Base-58 Encoded String -  An array of transaction signatures to confirm.
              - type: object
                properties:
                  searchTransactionHistory:
                    type: boolean
                    description: 'If true, a Solana node will search its ledger cache for any signatures not found in the recent status cache.'
sendTransaction:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: sendTransaction
          enum:
            - sendTransaction
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - type: string
                description: Encoded String - Fully-signed Transaction.
              - type: object
                properties:
                  skipPreflight:
                    type: boolean
                    description: 'If true, skip the preflight transaction checks (default - false).'
                  preflightCommitment:
                    type: string
                    default: finalized
                    description: Commitment level to use for preflight (default - "finalized").
                  encoding:
                    $ref: '#/encoding'
                  maxRetries:
                    type: number
                    description: 'Maximum number of times for the RPC node to retry sending the transaction to the leader. If this parameter not provided, the RPC node will retry the transaction until it is finalized or until the blockhash expires.'
                  minContextSlot:
                    $ref: '#/minContextSlot'
simulateTransaction:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: simulateTransaction
          enum:
            - simulateTransaction
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - type: string
                description: 'Transaction, as an encoded string. The transaction must have a valid blockhash, but is not required to be signed.'
              - type: object
                properties:
                  sigVerify:
                    type: boolean
                    default: false
                    description: 'if true the transaction signatures will be verified (default - false, conflicts with replaceRecentBlockhash).'
                  commitment:
                    $ref: '#/commitment'
                  encoding:
                    type: string
                    default: base58
                    description: 'Encoding used for the transaction data. Either "base58" (slow, DEPRECATED), or "base64". (default - "base58").'
                  replaceRecentBlockhash:
                    type: boolean
                    default: false
                    description: 'If true, the transaction recent blockhash will be replaced with the most recent blockhash. (default - false, conflicts with sigVerify).'
                  accounts:
                    type: object
                    description: Accounts configuration object.
                    properties:
                      encoding:
                        type: string
                        default: base64
                        description: |
                          Data encoding for each returned transaction
                          Accepts one of the following strings:
                          ["base64" (default), "base64+zstd" or "jsonParsed"] 
                          "jsonParsed" encoding attempts to use program-specific parsers to make the transaction.message.instructions list more human-readable; if a parser cannot be found, the instruction falls back to default JSON.
                      addresses:
                        type: array
                        description: Array of Base-58 Encoded Strings - An array of accounts to return.
                        items:
                          type: string
                  minContextSlot:
                    $ref: '#/minContextSlot'
getTransaction:
  allOf:
    - $ref: '#/common_request_fields'
    - type: object
      properties:
        method:
          type: string
          default: getTransaction
          enum:
            - getTransaction
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - type: string
                description: Returns transaction details for a confirmed transaction.
              - type: object
                properties:
                  encoding:
                    $ref: '#/encoding'
                  commitment:
                    $ref: '#/commitment'
                  maxSupportedTransactionVersion:
                    type: number
                    description: 'Set the max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned.'

# ============= Solana API Models ===============
common_request_fields:
  type: object
  properties:
    id:
      type: integer
      default: 1
    jsonrpc:
      type: string
      default: '2.0'
encoding:
  type: string
  description: |
    Data encoding for each returned transaction.
    Accepts one of the following strings:
    ["json" (Default), "jsonParsed", "base58" (slow), "base64"] 
    "jsonParsed" encoding attempts to use program-specific parsers to make the transaction.message.instructions list more human-readable; if a parser cannot be found, the instruction falls back to default JSON.
  default: json
  enum:
    - json
    - jsonParsed
    - base58
    - base64
dataSlice:
  type: object
  description: |
    Limits the returned account data using the provided offset: <usize> and length: <usize> fields
    Only available for "base58", "base64" or "base64+zstd" encodings.
minContextSlot:
  type: number
  default: 165768577
  description: Set the minimum slot that the request can be evaluated at.
commitment:
  type: string
  default: processed
  description: |
    Configures the commitment level of the blocks queried.
    Accepts one of the following strings: ["finalized", "confirmed", "processed"]
  enum:
    - finalized
    - confirmed
    - processed
configObject:
  type: object
  properties:
    commitment:
      $ref: '#/commitment'
    minContextSlot:
      $ref: '#/minContextSlot'
filters:
  type: array
  description: Array - Filter results using various filter objects; account must meet all filter criteria to be included in results.
  items:
    type: object
    properties:
      memcmp:
        type: object
        description: Compares a provided series of bytes with program account data at a particular offset.
        properties:
          offset:
            type: integer
            description: An offset into program account data to start comparison.
          bytes:
            type: string
            description: 'String - Data to match, as base-58 encoded string and limited to less than 129 bytes.'
      dataSize:
        type: integer
        format: int64
        description: Compares the program account data length with the provided data size.

# ======= Definitions for blockNumber ==========
# blockNumber or slotnumber is used in many API endpoints so creating a separate component for it
block_number:
  type: integer
  default: 165768577
  format: int64
  description: u64 - Slot integer for a block.
