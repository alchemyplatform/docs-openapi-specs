openapi: 3.1.0
info:
  title: debug_traceTransaction
  version: '1.0'
servers:
  - url: 'https://eth-mainnet.g.alchemy.com/v2 '
paths:
  /{apiKey}:
    post:
      summary: debug_traceTransaction
      description: Attempts to run the transaction in the exact same manner as it was executed on the network. It will replay any transaction that may have been executed prior to this one before it and will then attempt to execute the transaction that corresponds to the given hash.
      tags: []
      parameters:
        - name: apiKey
          in: path
          schema:
            type: string
            default: docs-demo
            description: |
              <style>
                .custom-style {
                  color: #048FF4;
                }
              </style>
              For higher throughput, <span class="custom-style"><a href="https://alchemy.com/?a=docs-demo" target="_blank">create your own API key</a></span>
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../evm_body.yaml#/debug_traceTransaction
      x-readme:
        explorer-enabled: false
        samples-languages:
          - javascript
          - shell
        code-samples:
          - language: javascript
            name: Alchemy SDK
            code: |
              // Importing the Alchemy SDK
              const { Network, Alchemy } = require("alchemy-sdk");

              // Configuring the Alchemy SDK
              const settings = {
                apiKey: "demo", // Replace with your Alchemy API Key.
                network: Network.ETH_MAINNET, // Replace with your network.
              };

              // Creating a new Alchemy instance to interact with the Alchemy APIs
              const alchemy = new Alchemy(settings);

              // Creating a function to run the code
              async function main() {
                // Hash of the transaction you want to trace
                let txHash =
                  "0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae";

                // Using the traceTransaction method to get the traces of the transaction
                let txTrace = await alchemy.debug.traceTransaction(txHash, {
                  type: "callTracer",
                });

                // Logging the traces of the transaction
                console.log(txTrace);
              }

              // Calling the main function to run the code
              main();
          - language: shell
            code: |
              curl https://eth-mainnet.g.alchemy.com/v2/demo \
              -X POST \
              -H "Content-Type: application/json" \
              --data '{"method":"debug_traceTransaction","params":["0x9e63085271890a141297039b3b711913699f1ee4db1acb667ad7ce304772036b", {"tracer": "callTracer"}], "id":1,"jsonrpc":"2.0"}'
            name: cURL
      responses:
        '200':
          description: 'Returns - transaction trace'
          content:
            application/json:
              schema:
                $ref: ../evm_responses.yaml#/debug_traceTransaction
      operationId: debug-tracetransaction
