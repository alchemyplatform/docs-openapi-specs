openapi: 3.1.0
info:
  title: debug_traceTransaction
  version: '1.0'
servers:
  - url: https://{network}.g.alchemy.com/v2
    variables:
      network:
        enum:
          - eth-mainnet
          - eth-goerli
          - polygon-mainnet
          - polygon-mumbai
          - arb-mainnet
          - arb-goerli
          - opt-mainnet
          - opt-goerli
        default: eth-mainnet
paths:
  /{apiKey}:
    post:
      summary: debug_traceTransaction
      description: Attempts to run the transaction in the exact same manner as it was executed on the network. It will replay any transaction that may have been executed prior to this one before it and will then attempt to execute the transaction that corresponds to the given hash.
      operationId: debug-tracetransaction
      parameters:
        - $ref: ../components/parameters.yaml#/ApiKey
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: ./schemas.yaml#/Id
                jsonrpc:
                  $ref: ./schemas.yaml#/JsonRpc
                method:
                  $ref: ./schemas.yaml#/Method
                  default: debug_traceTransaction
                params:
                  type: array
                  minItems: 1
                  maxItems: 1
                  description: |
                    1. String - Transaction hash
                    2. Object - options for call, can be any of the following options:
                      - `tracer`: Object - Currently supports `callTracer` and `prestateTracer` (see above for definitions).
                      - `timeout`: String - A duration string of decimal numbers that overrides the default timeout of 5 seconds for JavaScript-based tracing calls. Max timeout is "10s". Valid time units are "ns", "us", "ms", "s" each with optional fraction, such as "300ms" or "2s45ms".
                  items:
                    anyOf:
                      - $ref: '#/transactionHash_param'
                      - type: object
                        description: options for call
                        title: Options
                        properties:
                          tracer:
                            $ref: './components.yaml#/Tracer'
                          tracerConfig:
                            $ref: './components.yaml#/TracerConfig'
                          timeout:
                            type: string
                            description: A duration string of decimal numbers that overrides the default timeout of 5 seconds for JavaScript-based tracing calls. Max timeout is "10s". Valid time units are "ns", "us", "ms", "s" each with optional fraction, such as "300ms" or "2s45ms".
                            default: 5s
      responses:
        '200':
          description: 'Returns - transaction trace'
          content:
            application/json:
              schema:
                $ref: ../evm_responses.yaml#/debug_traceTransaction
      x-readme:
        explorer-enabled: false
        samples-languages:
          - curl
          - javascript
          - python
        code-samples:
          - language: javascript
            name: Alchemy SDK
            code: |
              // Importing the Alchemy SDK
              const { Network, Alchemy } = require("alchemy-sdk");

              // Configuring the Alchemy SDK
              const settings = {
                apiKey: "demo", // Replace with your Alchemy API Key.
                network: Network.ETH_MAINNET, // Replace with your network.
              };

              // Creating a new Alchemy instance to interact with the Alchemy APIs
              const alchemy = new Alchemy(settings);

              // Creating a function to run the code
              async function main() {
                // Hash of the transaction you want to trace
                let txHash =
                  "0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae";

                // Using the traceTransaction method to get the traces of the transaction
                let txTrace = await alchemy.debug.traceTransaction(txHash, {
                  type: "callTracer",
                });

                // Logging the traces of the transaction
                console.log(txTrace);
              }

              // Calling the main function to run the code
              main();
          - language: shell
            code: |
              curl https://eth-mainnet.g.alchemy.com/v2/demo \
              -X POST \
              -H "Content-Type: application/json" \
              --data '{"method":"debug_traceTransaction","params":["0x9e63085271890a141297039b3b711913699f1ee4db1acb667ad7ce304772036b", {"tracer": "callTracer"}], "id":1,"jsonrpc":"2.0"}'
            name: cURL
