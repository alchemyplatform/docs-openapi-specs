eth_getLogs:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: array
          description: 'Array of log objects, or an empty array if nothing has changed since last poll.'
          items:
            $ref: '#/log_object'
      example:
        $ref: ./evm_examples.yaml#/eth_getLogs
eth_blockNumber:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      description: Integer of the current block number the client is on.
      properties:
        result:
          type: string
          description: Integer of the current block number the client is on.
      example:
        $ref: ./evm_examples.yaml#/eth_blockNumber
eth_block:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          $ref: '#/block_object'
      example:
        $ref: ./evm_examples.yaml#/eth_block

block_object_arb:
  type: object
  properties:
    number:
      type: string
      description: The block number. null when its pending block.
    hash:
      type: string
      description: 32 Bytes - hash of the block. null when its pending block.
    parentHash:
      type: string
      description: 32 Bytes - hash of the parent block.
    nonce:
      type: string
      description: 8 Bytes - hash of the generated proof-of-work. null when its pending block.
    sha3Uncles:
      type: string
      description: 32 Bytes - SHA3 of the uncles data in the block.
    logsBloom:
      type: string
      description: 256 Bytes - the bloom filter for the logs of the block. null when its pending block.
    transactionsRoot:
      type: string
      description: 32 Bytes - the root of the transaction trie of the block.
    stateRoot:
      type: string
      description: 32 Bytes - the root of the final state trie of the block.
    receiptsRoot:
      type: string
      description: 32 Bytes - the root of the receipts trie of the block.
    miner:
      type: string
      description: 20 Bytes - the address of the beneficiary to whom the mining rewards were given.
    difficulty:
      type: string
      description: Fixed at `0x1`
      example: '0x1'
    totalDifficulty:
      type: string
      description: Integer of the total difficulty of the chain until this block.
    size:
      type: string
      description: Integer the size of this block in bytes.
    extraData:
      type: string
      description: The Merkle root of the Outbox tree state - same as `sendRoot`.
      example: '0x1992458362ac0d6c8e5f33d32a83edc9e7c53723d3f13dc3f41f710e2c2c5091'
    gasLimit:
      type: string
      description: Value is fixed at `0x4000000000000`, but it's important to note that Arbitrum currently has a 32M gas limit per block
      example: '0x4000000000000'
    gasUsed:
      type: string
      description: The total used gas by all transactions in this block.
    timestamp:
      type: string
      description: The unix timestamp for when the block was collated.
    transactions:
      type: array
      description: Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter.
      items:
        type: string
    uncles:
      type: array
      description: Array of uncle hashes.
      items:
        type: string
    l1BlockNumber:
      type: string
      description: An approximate L1 block number hex string that occurred before this L2 block.
      example: '0x1000755'
    sendCount:
      type: string
      description: The hex-number of L2-to-L1 messages since Nitro genesis.
      example: '0xdd2d'
    sendRoot:
      type: string
      description: The Merkle root of the Outbox tree state.
      example: '0x1992458362ac0d6c8e5f33d32a83edc9e7c53723d3f13dc3f41f710e2c2c5091'
    mixHash:
      type: string
      description: First 8 bytes is equivalent to `sendCount`, second 8 bytes is equivalent to `l1BlockNumber`
      example: '0x000000000000df4f00000000010036d5000000000000000a0000000000000000'

arb_block:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          $ref: '#/block_object_arb'
      example:
        $ref: ./evm_examples.yaml#/arb_block

log_object:
  type: object
  properties:
    blockHash:
      type: string
      description: 32 Bytes - hash of the block where this log was in. null when its pending. null when its pending log
    blockNumber:
      type: string
      description: The block number where this log was in. null when its pending. null when its pending log.
    transactionIndex:
      type: string
      description: Integer of the transactions index position log was created from. null when its pending log.
    address:
      type: string
      description: 20 Bytes - address from which this log originated.
    logIndex:
      type: string
      description: Integer of the log index position in the block. null when its pending log.
    data:
      type: string
      description: Contains one or more 32 Bytes non-indexed arguments of the log.
    removed:
      type: boolean
      description: 'true when the log was removed, due to a chain reorganization. false if its a valid log.'
    topics:
      type: array
      items:
        type: string
      description: 'Array of zero to four 32 Bytes DATA of indexed log arguments. In solidity: The first topic is the hash of the signature of the event (e.g. Deposit(address,bytes32,uint256)), except you declare the event with the anonymous specifier.'
    transactionHash:
      type: string
      description: Hash of the transactions this log was created from. null when its pending log.

block_object:
  allOf:
    - $ref: '#/nonce_hash_block'
    - type: object
      description: 'A block object with the following fields, or null when no block was found.'
      properties:
        baseFeePerGas:
          type: string
          description: the base fee, in wei, that is charged for each unit of gas used, during the execution of the given block, encoded as a hexadecimal.
        number:
          type: string
          description: the block number. null when its pending block.
        parentHash:
          type: string
          description: 32 Bytes - hash of the parent block.
        sha3Uncles:
          type: string
          description: 32 Bytes - SHA3 of the uncles data in the block.
        logsBloom:
          type: string
          description: 256 Bytes - the bloom filter for the logs of the block. null when its pending block.
        transactionsRoot:
          type: string
          description: 32 Bytes - the root of the transaction trie of the block.
        stateRoot:
          type: string
          description: 32 Bytes - the root of the final state trie of the block.
        receiptsRoot:
          type: string
          description: 32 Bytes - the root of the receipts trie of the block.
        miner:
          type: string
          description: 20 Bytes - the address of the beneficiary to whom the mining rewards were given.
        difficulty:
          type: string
          description: integer of the difficulty for this block.
        totalDifficulty:
          type: string
          description: integer of the total difficulty of the chain until this block.
        extraData:
          type: string
          description: the "extra data" field of this block.
        size:
          type: string
          description: integer the size of this block in bytes.
        gasLimit:
          type: string
          description: the maximum gas allowed in this block.
        gasUsed:
          type: string
          description: the total used gas by all transactions in this block.
        timestamp:
          type: string
          description: the unix timestamp for when the block was collated.
        transactions:
          type: array
          items:
            type: string
          description: 'Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter.'
        uncles:
          type: array
          items:
            type: string
          description: Array of uncle hashes.

common_response_fields:
  type: object
  properties:
    id:
      type: integer
    jsonrpc:
      type: string

hash_number_transactionIndex:
  type: object
  properties:
    blockHash:
      type: string
      description: 32 Bytes - The hash of the block where the given transaction was included.
    blockNumber:
      type: string
      description: The number of the block where the given transaction was included.
    transactionIndex:
      type: string
      description: The index of the transaction within the block.

nonce_hash_block:
  type: object
  properties:
    nonce:
      type: string
      description: 8 Bytes - hash of the generated proof-of-work. null when its pending block.
    hash:
      type: string
      description: 32 Bytes - hash of the block. null when its pending block.

nonce_hash_txn:
  type: object
  properties:
    nonce:
      type: string
      description: The number of transactions made by the sender prior to this one.
    hash:
      type: string
      description: 32 Bytes - hash of the transaction.

eth_getTransactionByHash:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          description: 'A transaction object, or null when no transaction was found'
          $ref: '#/transaction_object'
      example:
        $ref: ./evm_examples.yaml#/eth_getTransactionByHash

eth_getTransactionByHash_arb:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          description: 'A transaction object, or null when no transaction was found'
          $ref: '#/transaction_object_arb'
      example:
        $ref: ./evm_examples.yaml#/eth_getTransactionByHash_arb

transaction_object_arb:
  allOf:
    - $ref: '#/hash_number_transactionIndex'
    - $ref: '#/nonce_hash_txn'
    - type: object
      properties:
        from:
          type: string
          description: For L1-to-L2 related transactions, will be the aliased version of the L1's `msg.sender`.
        gas:
          type: string
          description: gas provided by the sender
        gasPrice:
          type: string
          description: gas price provided by the sender in Wei
        input:
          type: string
          description: the data send along with the transaction
        r:
          type: string
          description: ECDSA signature r
        s:
          type: string
          description: ECDSA signature s
        to:
          type: string
          description: 20 Bytes - address of the receiver. null when it's a contract creation transaction
        v:
          type: string
          description: ECDSA recovery id
        value:
          type: string
          description: value transferred in Wei
        type:
          type: string
          description: |
            Can also be one of the following codes, in addition to the standard transaction types:
            - `100` - ArbitrumDepositTxType: A deposit of ETH from L1 to L2 via the Arbitrum bridge.
            - `101` - ArbitrumUnsignedTxType: An L1 user can use to call an L2 contract via the bridge.
            - `102` - ArbitrumContractTxType: Allows an L1 contract to call an L2 contract method via the bridge.
            - `105` - ArbitrumSubmitRetryableTxType: Retryable tickets are submitted via the L1 bridge and allow arbitrary L1 to L2 messages to be created and executed on L2.
            - `104` - ArbitrumRetryTxType: Used to redeem a retryable ticket on L2, which finalizes a retryable that failed to execute automatically (usually due to low gas).
            - `106` - ArbitrumInternalTxType: Internal transactions created by the ArbOS itself for certain state updates, like L1 base fee and block number.

            Standard transaction types:
            - `0` - LegacyTransaction: A legacy transaction.
            - `1` - AccessListTransaction: An EIP-2930 transaction.
            - `2` - FeeMarketEIP1559Transaction: An EIP-1559 transaction.
        requestId:
          type: string
          description: Added to L1-to-L2 transactions to indicate position in the `Inbox` queue.

transaction_object:
  allOf:
    - $ref: '#/hash_number_transactionIndex'
    - $ref: '#/nonce_hash_txn'
    - type: object
      properties:
        from:
          type: string
          description: 20 Bytes - address of the sender
        gas:
          type: string
          description: gas provided by the sender
        gasPrice:
          type: string
          description: gas price provided by the sender in Wei
        input:
          type: string
          description: the data send along with the transaction
        r:
          type: string
          description: ECDSA signature r
        s:
          type: string
          description: ECDSA signature s
        to:
          type: string
          description: 20 Bytes - address of the receiver. null when it's a contract creation transaction
        v:
          type: string
          description: ECDSA recovery id
        value:
          type: string
          description: value transferred in Wei

transaction_receipt:
  description: 'A transaction receipt object, or null when no receipt was found'
  allOf:
    - $ref: '#/hash_number_transactionIndex'
    - type: object
      properties:
        transactionHash:
          type: string
          description: 32 Bytes - hash of the transaction
        from:
          type: string
          description: 20 Bytes - address of the sender
        to:
          type: string
          description: 20 Bytes - address of the receiver. null when its a contract creation transaction
        cumulativeGasUsed:
          type: string
          description: The total amount of gas used when this transaction was executed in the block.
        gasUsed:
          type: string
          description: The amount of gas used by this specific transaction alone
        contractAddress:
          type: string
          description: '20 Bytes - The contract address created, if the transaction was a contract creation, otherwise null'
        logs:
          type: array
          description: 'Array of log objects, which this transaction generated'
          items:
            $ref: '#/log_object'
        logsBloom:
          type: string
          description: 256 Bytes - Bloom filter for light clients to quickly retrieve related logs
        root:
          type: string
          description: 32 bytes of post-transaction stateroot. (pre Byzantium hard fork at block 4,370,000)
        status:
          type: integer
          description: Either 1 (success) or 0 (failure). (post Byzantium hard fork at block 4,370,000)
          enum:
            - 0
            - 1
        effectiveGasPrice:
          type: string
        type:
          type: string

transaction_receipt_zkevm:
  description: 'A transaction receipt object, or null when no receipt was found'
  allOf:
    - $ref: '#/hash_number_transactionIndex'
    - type: object
      properties:
        transactionHash:
          type: string
          description: 32 Bytes - hash of the transaction
        from:
          type: string
          description: 20 Bytes - address of the sender
        to:
          type: string
          description: 20 Bytes - address of the receiver. null when its a contract creation transaction
        cumulativeGasUsed:
          type: string
          description: The total amount of gas used when this transaction was executed in the block.
        gasUsed:
          type: string
          description: The amount of gas used by this specific transaction alone
        contractAddress:
          type: string
          description: '20 Bytes - The contract address created, if the transaction was a contract creation, otherwise null'
        logs:
          type: array
          description: 'Array of log objects, which this transaction generated'
          items:
            $ref: '#/log_object'
        logsBloom:
          type: string
          description: 256 Bytes - Bloom filter for light clients to quickly retrieve related logs
        root:
          type: string
          description: 32 bytes of post-transaction stateroot. (pre Byzantium hard fork at block 4,370,000)
        status:
          type: integer
          description: Either 1 (success) or 0 (failure). (post Byzantium hard fork at block 4,370,000)
          enum:
            - 0
            - 1
        type:
          type: string

eth_getTransactionReceipt:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          $ref: '#/transaction_receipt'
      example:
        $ref: ./evm_examples.yaml#/eth_getTransactionReceipt

eth_getTransactionReceipt_zkevm:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          $ref: '#/transaction_receipt_zkevm'
      example:
        $ref: ./evm_examples.yaml#/eth_getTransactionReceipt_zkevm

eth_cancelPrivateTransaction:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: boolean
          description: A boolean indicating if the operation was successful or not.
      example:
        $ref: ./evm_examples.yaml#/eth_cancelPrivateTransaction

eth_getTransactionReceipt_arb:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          allOf:
            - $ref: '#/transaction_receipt'
            - type: object
              properties:
                l1BlockNumber:
                  type: string
                  description: The L1 block number that would be used for `block.number` calls.
                gasUsedForL1:
                  type: string
                  description: Amount of gas spent on L1 calldata in units of L2 gas.
      example:
        $ref: ./evm_examples.yaml#/eth_getTransactionReceipt_arb

eth_getBlockReceipts:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/transaction_receipt'
      example:
        $ref: ./evm_examples.yaml#/eth_getBlockReceipts
eth_getProof:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: Object
          description: An account object
          properties:
            balance:
              type: string
              description: the balance of the account
            codeHash:
              type: string
              description: 32 Bytes - hash of the code of the account. For a simple Account without code it will return '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'
            nonce:
              type: string
              description: nonce of the account.
            storageHash:
              type: string
              description: 32 Bytes - SHA3 of the StorageRoot. All storage will deliver a MerkleProof starting with this rootHash.
            accountProof:
              type: array
              items:
                type: string
              description: 'Array of rlp-serialized MerkleTree-Nodes, starting with the stateRoot-Node, following the path of the SHA3 (address) as key.'
            storageProof:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                    description: the requested storage key
                  value:
                    type: string
                    description: the storage value
                  proof:
                    type: array
                    items:
                      type: string
                    description: 'Array of rlp-serialized MerkleTree-Nodes, starting with the storageHash-Node, following the path of the SHA3 (key) as path.'
      example:
        $ref: ./evm_examples.yaml#/eth_getProof
string_result_response:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: string
          description: '32 Bytes String - The Transaction Hash.'
      example:
        $ref: ./evm_examples.yaml#/string_result_response

eth_call:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: string
          description: 'The result of the call'
      example:
        $ref: ./evm_examples.yaml#/string_result_response

getTxn_result_response:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: object
          properties:
            jobStatus:
              type: string
              description: 'See below for the different response statuses'
              enum:
                - 'IN_PROGRESS'
                - 'COMPLETE'
                - 'ABANDONED'
                - 'UNSPECIFIED'
            transactionHashesAttempted:
              type: array
              description: 'An array of currently submitted transaction hashes'
              items:
                type: string
            minedTransactionHash:
              type: string
              description: transaction hash for the mined transaction if it has been mined
            transactionHashWithErrors:
              type: array
              description: An array of object errors that occurred with the transaction, omitted if no errors occurred.
              items:
                type: object
                properties:
                  hash:
                    type: string
                    description: hash for the transaction that had the error
                  errors:
                    type: array
                    description: error objects
                    properties:
                      code:
                        type: integer
                        description: error code
                      message:
                        type: string
                        description: error message
      example:
        $ref: ./evm_examples.yaml#/getTxn_result_response
sendTxn_result_response:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: object
          properties:
            trackingId:
              type: string
              description: 'A transaction identifier that can be used in alchemy_getGasOptimizedTransactionStatus for querying its status'
            transactionHashes:
              type: array
              description: 'An array of currently submitted transaction hashes'
              items:
                type: string
      example:
        $ref: ./evm_examples.yaml#/sendTxn_result_response
eth_feeHistory:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: object
          required:
            - OLDESTBLOCK
            - BASEFEEPERGAS
            - GASUSEDRATIO
          properties:
            OLDESTBLOCK:
              type: integer
              format: int64
              description: Lowest number block of the returned range.
            BASEFEEPERGAS:
              type: array
              description: 'An array of block base fees per gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.'
              items:
                type: string
            GASUSEDRATIO:
              type: array
              items:
                type: number
            REWARD:
              type: array
              items:
                type: array
                items:
                  type: string
      example:
        $ref: ./evm_examples.yaml#/eth_feeHistory
net_version:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: string
          description: 'The current network id. 1 - Ethereum Mainnet, 2 - Morden Testnet (deprecated), 3 - Ropsten Testnet, 4 - Rinkeby Testnet, 42 - Kovan Testnet,'
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '42'
      example:
        $ref: ./evm_examples.yaml#/net_version
eth_subscribe:
  type: object
  properties:
    jsonrpc:
      default: '2.0'
      type: string
      enum:
        - '2.0'
      description: Always '2.0'.
    method:
      type: string
      default: eth_subscription
      enum:
        - eth_subscription
      description: Always 'eth_subscription'.
    params:
      type: object
      properties:
        subscription:
          type: string
          description: The subscription ID returned by the eth_subscription call which created this subscription.
        result:
          description: An object whose contents vary depending on the type of subscription.
          oneOf:
            - $ref: '#/transaction_object'
            - type: string
            - $ref: '#/block_object'
            - $ref: '#/log_object'
            - type: object
              properties:
                syncing:
                  type: boolean
                status:
                  type: object
                  properties:
                    startingBlock:
                      type: integer
                    currentBlock:
                      type: integer
                    highestBlock:
                      type: integer
                    pulledStates:
                      type: integer
                    knownStates:
                      type: integer
  example:
    $ref: ./evm_examples.yaml#/eth_subscribe
alchemy_getTokenAllowance:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: string
          description: The allowance amount.
      example:
        $ref: ./evm_examples.yaml#/alchemy_getTokenAllowance
alchemy_getTokenBalances:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: object
          properties:
            address:
              type: string
              description: 'DATA, 20 Bytes - The address for which token balances were checked.'
            tokenBalances:
              type: array
              description: Array - returns an array of token balance objects. One of tokenBalance or error will be null.
              items:
                type: object
                properties:
                  contractAddress:
                    type: string
                  tokenBalance:
                    type: string
                  error:
                    type: string
      example:
        $ref: ./evm_examples.yaml#/alchemy_getTokenBalances
alchemy_getTokenMetadata:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: object
          properties:
            name:
              type: string
              description: String - The token's name. null if not defined in the contract and not available from other sources.
            symbol:
              type: string
              description: String - The token's symbol. null if not defined in the contract and not available from other sources.
            decimals:
              type: number
              description: Number - The number of decimals of the token. null if not defined in the contract and not available from other sources.
            logo:
              type: string
              description: String - URL of the token's logo image. null if not available.
      example:
        $ref: ./evm_examples.yaml#/alchemy_getTokenMetadata
trace_call:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          $ref: '#/trace_block'
      example:
        $ref: ./evm_examples.yaml#/trace_call
trace_block:
  type: object
  properties:
    output:
      type: string
    stateDiff:
      type: string
    trace:
      type: array
      items:
        type: object
        properties:
          action:
            $ref: '#/action_object'
          error:
            type: string
          subtraces:
            type: string
          traceAddress:
            type: array
            items:
              type: string
          type:
            type: string
    vmTrace:
      type: string
  example:
    $ref: ./evm_examples.yaml#/trace_block
action_object:
  type: object
  properties:
    callType:
      type: string
    from:
      type: string
    gas:
      type: string
    input:
      type: string
    to:
      type: string
    value:
      type: string
trace_filter:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/trace_filter_object'
      example:
        $ref: ./evm_examples.yaml#/trace_filter
trace_filter_object:
  type: object
  properties:
    action:
      $ref: '#/action_object'
    blockHash:
      type: string
    blockNumber:
      type: string
    result:
      type: object
      properties:
        gasUsed:
          type: string
        output:
          type: string
        subtraces:
          type: integer
        traceAddress:
          type: array
          items:
            type: string
        transactionHash:
          type: string
        transactionPosition:
          type: string
        type:
          type: string
trace_get_object:
  type: object
  properties:
    action:
      $ref: '#/action_object'
    blockHash:
      type: string
    blockNumber:
      type: string
    result:
      type: object
      properties:
        gasUsed:
          type: string
        output:
          type: string
    subtraces:
      type: integer
    traceAddress:
      type: array
      items:
        type: string
    transactionHash:
      type: string
    transactionPosition:
      type: string
    type:
      type: string
trace_get:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          $ref: '#/trace_get_object'
      example:
        $ref: ./evm_examples.yaml#/trace_get
trace_transaction:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/trace_get_object'
      example:
        $ref: ./evm_examples.yaml#/trace_transaction
trace_replayBlockTransactions:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: array
          items:
            allOf:
              - $ref: '#/trace_block'
              - type: object
                properties:
                  transactionHash:
                    type: string
      example:
        $ref: ./evm_examples.yaml#/trace_replayBlockTransactions

# ===== Debug API Responses ============
callTracer:
  type: object
  properties:
    type:
      type: string
      description: CALL or CREATE
    from:
      type: string
      description: 20 Bytes - address of the sender
    to:
      type: string
      description: 20 Bytes - address of the receiver. null when its a contract creation transaction
    value:
      type: string
      description: amount of value for transfer (in hex)
    gas:
      type: string
      description: amount of gas provided for the call (in hex)
    gasUsed:
      type: string
      description: amount of gsa used during the call (in hex)
    input:
      type: string
      description: call data
    output:
      type: string
      description: return data
    error:
      type: string
      description: error, if any
    revertReason:
      type: string
      description: solidity revert reason, if any
    calls:
      type: array
      description: list of sub-calls

debug_traceCall:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: array
          description: Array of block traces
          items:
            $ref: '#/callTracer'
      example:
        $ref: ./evm_examples.yaml#/debug_traceCall

debug_traceTransaction:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          description: trace for the transaction
          $ref: '#/callTracer'
      example:
        $ref: ./evm_examples.yaml#/debug_traceTransaction

debug_traceBlockByHash:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: array
          description: array of block traces
          items:
            $ref: '#/callTracer'
      example:
        $ref: ./evm_examples.yaml#/debug_traceBlockByHash

debug_traceBlockByNumber:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: array
          description: array of block traces
          items:
            $ref: '#/callTracer'
      example:
        $ref: ./evm_examples.yaml#/debug_traceBlockByNumber

# ===== Polygon API Responses ============
bor_getAuthor:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          description: AUTHOR - address.
          type: string
      example:
        $ref: ./evm_examples.yaml#/bor_getAuthor
bor_getCurrentValidators:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          description: List of current validators.
          type: array
          items:
            type: object
            properties:
              ID:
                type: integer
              signer:
                type: string
              power:
                type: integer
              accum:
                type: integer
      example:
        $ref: ./evm_examples.yaml#/bor_getCurrentValidators
bor_getCurrentProposer:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          description: AUTHOR - address.
          type: string
      example:
        $ref: ./evm_examples.yaml#/bor_getCurrentProposer
bor_getRootHash:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          description: Hash
          type: string
      example:
        $ref: ./evm_examples.yaml#/bor_getRootHash
bor_getSignersAtHash:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          description: Array of signers for the specified block hash
          type: array
          items:
            type: string
      example:
        $ref: ./evm_examples.yaml#/bor_getSignersAtHash
eth_getSignersAtHash:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          description: List of HASH.
          type: array
          items:
            type: string
      example:
        $ref: ./evm_examples.yaml#/eth_getSignersAtHash

eth_getTransactionReceiptsByBlock:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          description: Array of transaction receipt objects.
          type: array
          items:
            $ref: '#/transaction_receipt'
      example:
        $ref: ./evm_examples.yaml#/eth_getTransactionReceiptsByBlock
eth_syncing:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          description: An object with sync status data or FALSE, when not syncing.
          oneOf:
            - type: object
              properties:
                startingBlock:
                  type: string
                  description: 'The block at which the import started (will only be reset, after the sync reached his head).'
                currentBlock:
                  type: string
                  description: 'The current block, same as eth_blockNumber'
                highestBlock:
                  type: string
                  description: 'The estimated highest block.'
            - type: boolean
      example:
        $ref: ./evm_examples.yaml#/eth_syncing

# ============= Arbitrum API Methods ===============
eth_createAccessList:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: object
          description: Returns list of addresses and storage keys that are read and written by the transaction (except the sender account and precompiles), plus the estimated gas consumed when the access list is added.
          properties:
            accessList:
              description: list of objects containing addresses and storage keys
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    description: address read or written by the transaction
                  storageKeys:
                    type: array
                    description: list of storage keys used by the transaction
                    items:
                      type: string
            gasUsed:
              type: string
              description: estimated gas consumed when the access list is added. Note, adding an `accessList` to your transaction does not necessary result in lower gas usage compared to a transaction without an `accessList`.
          example:
            $ref: ./evm_examples.yaml#/eth_createAccessList

# ============= Transfers API Methods ===============
alchemy_getAssetTransfers:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: object
          description: 'An object with the following fields.'
          properties:
            pageKey:
              type: string
              description: 'Uuid of next page of results (if exists, else blank).'
            transfers:
              type: array
              description: 'Array of objects - sorted in ascending order by block number, ties broken by category (external , internal, token transfers).'
              items:
                $ref: '#/transfer'
      example:
        $ref: ./evm_examples.yaml#/alchemy_getAssetTransfers
transfer:
  type: object
  properties:
    category:
      type: string
      description: "'external', 'internal', 'token', 'erc20', 'erc721', 'erc1155', 'specialnft' - label for the transfer."
    blockNum:
      type: string
      description: 'The block where the transfer occurred (hex string).'
    from:
      type: string
      description: 'From address of transfer (hex string).'
    to:
      type: string
      description: 'To address of transfer (hex string). null if contract creation.'
    value:
      type: string
      nullable: true
      description: 'Converted asset transfer value as a number (raw value divided by contract decimal). null if ERC721 transfer or contract decimal not available.'
    erc721TokenId:
      type: string
      nullable: true
      description: '(Deprecated) Legacy token ID field for ERC721 tokens (hex string). The `tokenId` field should be used instead.'
    erc1155Metadata:
      type: array
      nullable: true
      description: 'A list of objects containing the ERC1155 tokenId (hex string) and value (hex string). null if not an ERC1155 transfer.'
      items:
        type: object
        properties:
          tokenId:
            type: string
          value:
            type: string
    tokenId:
      type: string
      description: 'Token ID for ERC721 (or other NFT) tokens.'
    asset:
      type: string
      nullable: true
      description: "ETH or the token's symbol. null if not defined in the contract and not available from other sources."
    uniqueId:
      type: string
      description: 'A unique identifier for the transfer object.'
    hash:
      type: string
      description: 'Transaction hash (hex string).'
    rawContract:
      type: object
      properties:
        value:
          type: string
          nullable: true
          description: 'Raw transfer value (hex string). null if ERC721 or ERC1155 transfer.'
        address:
          type: string
          nullable: true
          description: 'Contract address (hex string). null if external or internal transfer.'
        decimal:
          type: string
          nullable: true
          description: 'Contract decimal (hex string). null if not defined in the contract and not available from other sources.'
    metadata:
      type: object
      properties:
        blockTimestamp:
          type: string
          description: 'Timestamp of the block from which the transaction event originated (ISO-formatted timestamp).'

# ============= zkEVM Responses ===============

zkevm_consolidatedBlockNumber:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      description: The latest block number that is connected to the latest batch verified.
      properties:
        result:
          type: string
          description: The latest block number that is connected to the latest batch verified.
      example:
        $ref: ./evm_examples.yaml#/zkevm_consolidatedBlockNumber

zkevm_isBlockVirtualized:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      description: Returns true if the provided block number is already connected to a batch that was already virtualized, otherwise false.
      properties:
        result:
          type: boolean
          description: Returns true if the provided block number is already connected to a batch that was already virtualized, otherwise false.
      example:
        $ref: ./evm_examples.yaml#/zkevm_isBlockVirtualized

zkevm_isBlockConsolidated:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      description: Returns true if the provided block number is already connected to a batch that was already verified, otherwise false.
      properties:
        result:
          type: boolean
          description: Returns true if the provided block number is already connected to a batch that was already verified, otherwise false.
      example:
        $ref: ./evm_examples.yaml#/zkevm_isBlockConsolidated

zkevm_batchNumberByBlockNumber:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      description: Returns the batch number of the batch connected to the block.
      properties:
        result:
          type: string
          description: Returns the batch number of the batch connected to the block.
      example:
        $ref: ./evm_examples.yaml#/zkevm_batchNumberByBlockNumber

zkevm_batchNumber:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      description: Returns the latest batch number.
      properties:
        result:
          type: string
          description: Returns the latest batch number.
      example:
        $ref: ./evm_examples.yaml#/zkevm_batchNumber

zkevm_virtualBatchNumber:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      description: Returns the latest virtual batch number.
      properties:
        result:
          type: string
          description: Returns the latest virtual batch number.
      example:
        $ref: ./evm_examples.yaml#/zkevm_virtualBatchNumber

zkevm_verifiedBatchNumber:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      description: Returns the latest verified batch number.
      properties:
        result:
          type: string
          description: Returns the latest verified batch number.
      example:
        $ref: ./evm_examples.yaml#/zkevm_verifiedBatchNumber

zkevm_getBatchByNumber:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      description: Returns the batch with the given number.
      properties:
        result:
          type: object
          description: Returns the batch with the given number.
          properties:
            number:
              type: string
              description: The batch number.
            coinbase:
              type: string
              description: The coinbase address.
            stateRoot:
              type: string
              description: The state root.
            globalExitRoot:
              type: string
              description: The global exit root.
            localExitRoot:
              type: string
              description: The local exit root.
            accInputHash:
              type: string
              description: The accumulated input hash.
            timestamp:
              type: string
              description: The timestamp.
            sendSequencesTxHash:
              type: string
              description: The send sequences transaction hash.
            verifyBatchTxHash:
              type: string
              description: The verify batch transaction hash.
            transactions:
              type: array
              description: The transactions.
              items:
                type: string
      example:
        $ref: ./evm_examples.yaml#/zkevm_getBatchByNumber

zkevm_getBroadcastURI:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      description: Returns the configured Broadcast URL of the Trusted Sequencer.
      properties:
        result:
          type: string
          description: Returns the configured Broadcast URL of the Trusted Sequencer.
      example:
        $ref: ./evm_examples.yaml#/zkevm_getBroadcastURI

# ============= Account Abstraction ===============

eth_sendUserOperation:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: string
          description: The calculated `userOpHash` for the valid `UserOperation`
      example:
        $ref: ./evm_examples.yaml#/eth_sendUserOperation

eth_estimateUserOperationGas:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: object
          properties:
            preVerificationGas:
              type: integer
              description: Gas overhead of this UserOperation
            verificationGasLimit:
              type: integer
              description: Actual gas used by the validation of this UserOperation
            callGasLimit:
              type: integer
              description: Value used by inner account execution
      example:
        $ref: ./evm_examples.yaml#/eth_estimateUserOperationGas

eth_getUserOperationByHash:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          allOf:
            - $ref: ./components/schemas.yaml#/UserOperation
            - type: object
              properties:
                entryPoint:
                  type: string
                  description: EntryPoint address
                blockNumber:
                  type: integer
                  description: Block number in which UserOperation is included
                blockHash:
                  type: string
                  description: Block hash of the block containing UserOperation
                transactionHash:
                  type: string
                  description: Transaction hash of the UserOperation
      example:
        $ref: './evm_examples.yaml#/eth_getUserOperationByHash'

eth_getUserOperationReceipt:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          $ref: ./components/schemas.yaml#/UserOperationReceipt
      example:
        $ref: './evm_examples.yaml#/eth_getUserOperationReceipt'

eth_supportedEntryPoints:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: array
          description: Array of supported entryPoint addresses
          items:
            type: string
            pattern: '^0x[a-fA-F0-9]{40}$'
      example:
        $ref: ./evm_examples.yaml#/eth_supportedEntryPoints

alchemy_requestPaymasterAndData:
  allOf:
    - $ref: '#/common_response_fields'
    - type: object
      properties:
        result:
          type: object
          properties:
            paymasterAndData:
              type: string
              description: |
                The 0x-prefixed hex string for the user to put into the UO's paymasterAndData field.
                Contains paymaster address, sigTimeRange, and secp256k1 signature.
            error:
              type: object
              description: Error object if the sponsorship request is not approved
              properties:
                code:
                  type: integer
                  description: Error code
                message:
                  type: string
                  description: Error message
                data:
                  type: object
                  description: Additional error data
      example:
        $ref: ./evm_examples.yaml#/alchemy_requestPaymasterAndData
