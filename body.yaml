eth_blockNumber:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_blockNumber
          enum:
            - eth_blockNumber
eth_getBlockByHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBlockByHash
          enum:
            - eth_getBlockByHash
        params:
          type: array
          description:
            $ref: '#/blockHashAndBooleanTransaction'
          minItems: 2
          maxItems: 2
          prefixItems:
            types:
              - string
              - boolean
eth_getBlockByNumber:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBlockByNumber
          enum:
            - eth_getBlockByNumber
        params:
          type: array
          description:
            $ref: '#/blockNumberBooleanTransaction'
          minItems: 2
          maxItems: 2
          prefixItems:
            types:
              - string
              - boolean
eth_getLogs:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getLogs
          enum:
            - eth_getLogs
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/filter_options'
filter_options:
  type: object
  properties:
    blockHash:
      type: string
      description: 'Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash. If blockHash is present in the filter criteria, then neither fromBlock nor toBlock are allowed.'
    address:
      type: array
      items:
        type: string
      description: Contract address or a list of addresses from which logs should originate.
    fromBlock:
      type: string
      default: latest
      description: 'Starting block number. Can be integer, hex, or ''latest'' for the last mined block, ''pending'', ''earliest'' for not yet mined transactions.'
    toBlock:
      type: string
      default: latest
      description: 'Ending block number. Can be integer, hex, or ''latest'' for the last mined block, ''pending'', ''earliest'' for not yet mined transactions.'
    topics:
      $ref: '#/topics'
topics:
  type: array
  description: Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with "or" options.
  items:
    type: string
CommonProperties:
  type: object
  properties:
    id:
      type: integer
      default: 1
    jsonrpc:
      type: string
      default: '2.0'
defaultBlockParam:
  type: string
  description: The following options are possible for the defaultBlock parameter. HEX String - an integer block number. String 'earliest' for the earliest/genesis block. String 'latest' - for the latest mined block. String 'pending' - for the pending state/transactions
eth_call_550:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_call
          enum:
            - eth_call
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_550'
              - $ref: '#/defaultBlockParam'
eth_call_5:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_call
          enum:
            - eth_call
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_5'
              - $ref: '#/defaultBlockParam'
eth_call_50:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_call
          enum:
            - eth_call
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_50'
              - $ref: '#/defaultBlockParam'
transaction_object:
  type: object
  description: The transaction call object
  properties:
    from:
      type: string
      description: 20 Bytes - The address the transaction is sent from.
    to:
      type: string
      description: 20 Bytes - The address the transaction is directed to
    gasPrice:
      type: string
      description: |
        Integer of the gasPrice used for each paid gas.
        <br/><strong>NOTE:</strong> most of our users <b>(95%+)</b> never set the gasPrice on eth_call.
    value:
      type: string
      description: Integer of the value sent with this transaction
    data:
      type: string
      description: Hash of the method signature and encoded parameters
  required:
    - to
gas_50:
  type: object
  properties:
    gas:
      type: string
      description: |
        Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. 
        </br><strong> NOTE: </strong>this parameter has a cap of <b>50</b> Million gas per request. Reach out to us at support@alchemy.com if you want to increase this limit!
gas_5:
  type: object
  properties:
    gas:
      type: string
      description: |
        Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. 
        </br><strong> NOTE: </strong>this parameter has a cap of <b>5</b> Million gas per request. Reach out to us at support@alchemy.com if you want to increase this limit!
gas_550:
  type: object
  properties:
    gas:
      type: string
      description: |
        Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. 
        </br><strong> NOTE: </strong>this parameter has a cap of <b>550</b> Million gas per request. Reach out to us at support@alchemy.com if you want to increase this limit!
transactionHash_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/transactionHash'
      minItems: 1
      maxItems: 1
      items:
        type: string
blockNumber_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/blockNumber'
      minItems: 1
      maxItems: 1
      items:
        type: string
eth_getTransactionByHash:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/transactionHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionByHash
          enum:
            - eth_getTransactionByHash
address_blockNumber_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/address_blockNumber'
      minItems: 2
      maxItems: 2
      items:
        type: string
eth_getTransactionCount:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/address_blockNumber_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionCount
          enum:
            - eth_getTransactionCount
eth_getTransactionReceipt:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/transactionHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionReceipt
          enum:
            - eth_getTransactionReceipt
eth_getBlockTransactionCountByHash:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/transactionHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBlockTransactionCountByHash
          enum:
            - eth_getBlockTransactionCountByHash
eth_getBlockTransactionCountByNumber:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumber_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBlockTransactionCountByNumber
          enum:
            - eth_getBlockTransactionCountByNumber
blockHash_index_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/blockHash_index'
      minItems: 2
      maxItems: 2
      items:
        type: string
eth_getTransactionByBlockHashAndIndex:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockHash_index_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionByBlockHashAndIndex
          enum:
            - eth_getTransactionByBlockHashAndIndex
blockNumber_index_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/blockNumber_index'
      minItems: 2
      maxItems: 2
      items:
        type: string
eth_getTransactionByBlockNumberAndIndex:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumber_index_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionByBlockNumberAndIndex
          enum:
            - eth_getTransactionByBlockNumberAndIndex
blockNumberOrBlockHash_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/blockNumberOrBlockHash'
      minItems: 1
      maxItems: 1
      items:
        type: string
eth_getBlockReceipts:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumberOrBlockHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBlockReceipts
          enum:
            - eth_getBlockReceipts
transactionData_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/transactionData'
      minItems: 1
      maxItems: 1
      items:
        type: string
eth_sendRawTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/transactionData_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_sendRawTransaction
          enum:
            - eth_sendRawTransaction
eth_sendPrivateTransaction:
  type: array
  minItems: 1
  maxItems: 1
  items:
    type: object
    required:
      - tx
    properties:
      tx:
        type: string
        description: 'Raw, signed transaction'
      maxBlockNumber:
        type: string
        description: Hex-encoded number for highest block number in which the transaction should be included.
      preferences:
        type: object
        properties:
          fast:
            type: boolean
            description: Sends transaction with fast mode when true.
eth_cancelPrivateTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_cancelPrivateTransaction
          enum:
            - eth_cancelPrivateTransaction
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: object
            properties:
              txHash:
                type: string
                description: Transaction hash for private transaction to be cancelled.
eth_getBalance:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/address_blockNumber_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getBalance
          enum:
            - eth_getBalance
address_blockNumber_blockHash_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/address_blockNumber_blockHash'
      minItems: 3
      maxItems: 3
      items:
        type: string
eth_getStorageAt:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/address_blockNumber_blockHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getStorageAt
          enum:
            - eth_getStorageAt
eth_getCode:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/address_blockNumber_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getCode
          enum:
            - eth_getCode
eth_accounts:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_accounts
          enum:
            - eth_accounts
eth_getProof:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getProof
          enum:
            - eth_getProof
        params:
          description:
            $ref: '#/address_storageKeys_blockNumber'
          type: array
          minItems: 3
          maxItems: 3
          items:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
eth_protocolVersion:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_protocolVersion
          enum:
            - eth_protocolVersion
eth_gasPrice:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_gasPrice
          enum:
            - eth_gasPrice
eth_estimateGas_550:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_estimateGas
          enum:
            - eth_estimateGas
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_550'
              - $ref: '#/defaultBlockParam'
eth_estimateGas_5:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_estimateGas
          enum:
            - eth_estimateGas
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_5'
              - $ref: '#/defaultBlockParam'
eth_estimateGas_50:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_estimateGas
          enum:
            - eth_estimateGas
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_50'
              - $ref: '#/defaultBlockParam'
eth_feeHistory:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_feeHistory
          enum:
            - eth_feeHistory
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: object
            required:
              - BLOCKCOUNT
              - NEWESTBLOCK
            properties:
              BLOCKCOUNT:
                type: integer
                description: Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.
              NEWESTBLOCK:
                type: integer
                format: int64
                description: Highest number block of the requested range.
              REWARDPERCENTILES:
                type: array
                description: 'A monotonically increasing list of percentile values to sample from each block''s effective priority fees per gas in ascending order, weighted by gas used.'
                items:
                  type: number
eth_maxPriorityFeePerGas:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_maxPriorityFeePerGas
          enum:
            - eth_maxPriorityFeePerGas
eth_chainId:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_chainId
          enum:
            - eth_chainId
net_version:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: net_version
          enum:
            - net_version
net_listening:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: net_listening
          enum:
            - net_listening
blockNumber_uncleIndex_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/blockNumber_uncleIndex'
      minItems: 2
      maxItems: 2
      items:
        type: string
eth_getUncleByBlockHashAndIndex:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumber_uncleIndex_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getUncleByBlockHashAndIndex
          enum:
            - eth_getUncleByBlockHashAndIndex
eth_getUncleByBlockNumberAndIndex:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumber_uncleIndex_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getUncleByBlockNumberAndIndex
          enum:
            - eth_getUncleByBlockNumberAndIndex
eth_getUncleCountByBlockHash:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/transactionHash_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getUncleCountByBlockHash
          enum:
            - eth_getUncleCountByBlockHash
eth_getUncleCountByBlockNumber:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/blockNumber_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getUncleCountByBlockNumber
          enum:
            - eth_getUncleCountByBlockNumber
filterId_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/filterId'
      minItems: 1
      maxItems: 1
      items:
        type: string
eth_getFilterChanges:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/filterId_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getFilterChanges
          enum:
            - eth_getFilterChanges
eth_getFilterLogs:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/filterId_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_getFilterLogs
          enum:
            - eth_getFilterLogs
eth_newBlockFilter:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_newBlockFilter
          enum:
            - eth_newBlockFilter
eth_newFilter:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_newFilter
          enum:
            - eth_newFilter
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/filter_options'
eth_newPendingTransactionFilter:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_newPendingTransactionFilter
          enum:
            - eth_newPendingTransactionFilter
eth_uninstallFilter:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/filterId_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_uninstallFilter
          enum:
            - eth_uninstallFilter
web3_clientVersion:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: web3_clientVersion
          enum:
            - web3_clientVersion
shaHash_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/shaHash'
      minItems: 1
      maxItems: 1
      items:
        type: string
web3_sha3:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/shaHash_param'
    - type: object
      properties:
        method:
          type: string
          default: web3_sha3
          enum:
            - web3_sha3
eth_subscribe:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_subscribe
          enum:
            - eth_subscribe
        params:
          type: array
          minItems: 1
          maxItems: 3
          items:
            oneOf:
              - type: string
                description: 'Returns the transaction information for all transactions that are added to the pending state. This subscription type subscribes to pending transactions, similar to the standard Web3 call web3.eth.subscribe(''pendingTransactions''), but differs in that it emits full transaction information rather than just transaction hashes.'
                enum:
                  - alchemy_newFullPendingTransactions
              - oneOf:
                  - type: string
                    description: 'Returns the transaction information for all transactions that are added to the pending state that match a given filter. Currently supports an address filter, which will return transactions from or to the address.'
                    enum:
                      - alchemy_filteredNewFullPendingTransactions
                  - type: object
                    properties:
                      address:
                        type: string
              - type: string
                description: Returns the hash for all transactions that are added to the pending state.
                enum:
                  - newPendingTransactions
              - type: string
                description: 'Emits an event any time a new header is added to the chain, including during a chain reorganization.'
                enum:
                  - newHeads
              - oneOf:
                  - type: string
                    description: Emits logs which are part of newly added blocks that match specified filter criteria.
                    enum:
                      - logs
                  - type: object
                    description: An object.
                    properties:
                      address:
                        description: Either a string representing an address or an array of such strings. Only logs created from one of these addresses will be emitted.
                        oneOf:
                          - type: string
                          - type: array
                            items:
                              type: string
                      topics:
                        description: An array of topic specifiers.
                        oneOf:
                          - type: string
                          - type: array
                            items:
                              type: string
              - type: string
                description: 'Indicates when the node starts or stops synchronizing. The result can either be a boolean indicating that the synchronization has started (true), finished (false) or an object with various progress indicators.'
                enum:
                  - syncing
subscriptionId_param:
  type: object
  properties:
    params:
      type: array
      description:
        $ref: '#/subscriptionId'
      minItems: 1
      maxItems: 1
      items:
        type: string
eth_unsubscribe:
  allOf:
    - $ref: '#/CommonProperties'
    - $ref: '#/subscriptionId_param'
    - type: object
      properties:
        method:
          type: string
          default: eth_unsubscribe
          enum:
            - eth_unsubscribe
alchemy_getTransactionReceipts_param:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: alchemy_getTransactionReceipts
          enum:
            - alchemy_getTransactionReceipts
        params:
          type: array
          description:
            $ref: '#/alchemy_getTransactionReceipts'
          minItems: 1
          maxItems: 2
          items:
            type: string
alchemy_getTokenAllowance:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        params:
          type: array
          description: null
          minItems: 1
          maxItems: 1
          items:
            type: object
            properties:
              contract:
                type: string
                description: 'String - DATA, 20 Bytes - The address of the token contract.'
              owner:
                type: string
                description: 'String - DATA, 20 Bytes - The address of the token owner.'
              spender:
                type: string
                description: 'String - DATA, 20 Bytes - The address of the token spender.'
alchemy_getTokenBalances:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        params:
          type: array
          description: |
            - DATA, 20 Bytes - The address for which token balances will be checked.
            - OneOf
              - Array - A list of contract addresses. Suggested limit: 100 addresses
              - The String ''DEFAULT_TOKENS'' - denotes a query for the top 100 tokens by 24 hour volume.
          minItems: 2
          maxItems: 2
          items:
            allOf:
              - type: string
              - oneOf:
                  - type: array
                    minItems: 1
                    maxItems: 100
                    items:
                      type: string
                  - type: string
                    enum:
                      - DEFAULT_TOKENS
alchemy_getTokenMetadata:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        params:
          type: array
          description: 'String - DATA, 20 Bytes - The address of the token contract.'
          minItems: 1
          maxItems: 1
          items:
            type: string
trace_call:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_call
          enum:
            - trace_call
        params:
          type: array
          items:
            oneOf:
              - $ref: '#/transaction_object'
                description: Call options.
              - type: array
                description: 'Type of trace, one or more of "vmTrace", "trace", "stateDiff".'
                items:
                  type: string
                  enum:
                    - vmTrace
                    - trace
                    - stateDiff
              - $ref: '#/defaultBlockParam'
trace_callMany:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_callMany
          enum:
            - trace_callMany
        params:
          type: array
          items:
            oneOf:
              - type: array
                description: 'List of trace calls with the type of trace, one or more of "vmTrace", "trace", "stateDiff".'
                items:
                  type: string
                  enum:
                    - vmTrace
                    - trace
                    - stateDiff
              - $ref: '#/defaultBlockParam'
trace_rawTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_rawTransaction
          enum:
            - trace_rawTransaction
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Raw transaction data.
              - type: array
                description: 'Array - Type of trace, one or more of "vmTrace", "trace", "stateDiff".'
                items:
                  type: string
trace_replayBlockTransactions:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_replayBlockTransactions
          enum:
            - trace_replayBlockTransactions
        params:
          type: array
          items:
            oneOf:
              - $ref: '#/defaultBlockParam'
              - type: array
                description: 'Array - Type of trace, one or more of "vmTrace", "trace", "stateDiff".'
                items:
                  type: string
trace_replayTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_replayTransaction
          enum:
            - trace_replayTransaction
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Hash - Transaction hash.
              - type: array
                description: 'Array - Type of trace, one or more of "vmTrace", "trace", "stateDiff".'
                items:
                  type: string
trace_block:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_block
          enum:
            - trace_block
        params:
          type: array
          items:
            $ref: '#/defaultBlockParam'
trace_filter:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_filter
          enum:
            - trace_filter
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: object
            properties:
              fromBlock:
                type: string
                description: From this block
              toBlock:
                type: string
                description: To this block.
              fromAddress:
                type: string
                description: Sent from these addresses.
              toAddress:
                type: string
                description: Sent to these addresses.
              after:
                type: string
                description: The offset trace number.
              count:
                type: integer
                description: Integer number of traces to display in a batch.
trace_get:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_get
          enum:
            - trace_get
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Hash - Transaction hash.
              - type: array
                description: Array - Index positions of the traces.
                items:
                  type: string
trace_transaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: trace_transaction
          enum:
            - trace_transaction
        params:
          type: array
          items:
            type: string
            description: Hash - Transaction hash.
getBlockHeight:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getBlockHeight
          enum:
            - getBlockHeight
        params:
          type: array
          items:
            type: object
            description: Config object.
            properties:
              commitment:
                $ref: '#/commitment'
getBlock:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getBlock
          enum:
            - getBlock
        params:
          type: array
          items:
            oneOf:
              - type: integer
                description: A slot integer denoting the target block number.
              - type: object
                properties:
                  encoding:
                    $ref: '#/encoding'
                  transactionDetails:
                    type: string
                    description: |
                      Level of transaction detail to return.
                      Accepts one of the following strings:
                      ["full" (Default), "signatures", or "none"] 
                    enum:
                      - full
                      - signatures
                      - none
                    default: full
                  rewards:
                    type: boolean
                    description: Whether to populate the rewards array.  true (Default)
                    default: true
                  commitment:
                    $ref: '#/commitment'
                  maxSupportedTransactionVersion:
                    type: integer
                    description: Sets the maximum transaction version.
getBlocks:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getBlocks
          enum:
            - getBlocks
        params:
          type: array
          items:
            - $ref: '#/get_blocks'
get_blocks:
  oneOf:
    - type: integer
      format: int64
      description: (Required) Starting slot integer or (Optional) ending slot integer.
    - type: object
      properties:
        commitment:
          $ref: '#/commitment'
getBlocksWithLimit:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getBlocksWithLimit
          enum:
            - getBlocksWithLimit
        params:
          type: array
          items:
            - $ref: '#/get_blocks'
getBlockTime:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getBlockTime
          enum:
            - getBlockTime
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: integer
            format: int64
            description: u64 - Slot integer for a block.
getBlockCommitment:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getBlockCommitment
          enum:
            - getBlockCommitment
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: integer
            format: int64
            description: u64 - A slot integer denoting the block number.
getBlockProduction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getBlockProduction
          enum:
            - getBlockProductions
        params:
          type: array
          items:
            type: object
            properties:
              commitment:
                $ref: '#/commitment'
              range:
                type: object
                description: Slot range for block production response. Defaults to to the current epoch.
                required:
                  - firstSlot
                properties:
                  firstSlot:
                    type: integer
                    format: int64
                    description: u64 - First slot to return block production information for (inclusive).
                  lastSlot:
                    type: integer
                    format: int64
                    description: u64 - Last slot to return block production information for (inclusive). Defaults to the highest slot.
                  identity:
                    type: string
                    description: Base-58 Encoded String - Specifies return results for a particular validator identity.
isBlockhashValid:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: isBlockhashValid
          enum:
            - isBlockhashValid
        params:
          type: array
          minItems: 2
          maxitems: 2
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - The blockhash of this block.
              - $ref: '#/configObject'
getAccountInfo:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getAccountInfo
          enum:
            - getAccountInfo
        params:
          type: array
          minItems: 2
          maxitems: 2
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Pubkey of account to query.
              - type: object
                description: Config object.
                properties:
                  encoding:
                    $ref: '#/encoding'
                  dataSlice:
                    $ref: '#/dataSlice'
encoding:
  type: string
  description: |
    Data encoding for each returned transaction.
    Accepts one of the following strings:
    ["json" (Default), "jsonParsed", "base58" (slow), "base64"] 
    "jsonParsed" encoding attempts to use program-specific parsers to make the transaction.message.instructions list more human-readable; if a parser cannot be found, the instruction falls back to default JSON. 
  default: json
  enum:
    - json
    - jsonParsed
    - base58
    - base64
dataSlice:
  type: object
  description: |
    Limits the returned account data using the provided offset: <usize> and length: <usize> fields
    Only available for "base58", "base64" or "base64+zstd" encodings.
minContextSlot:
  type: number
  description: Set the minimum slot that the request can be evaluated at.
commitment:
  type: string
  description: |
    Configures the commitment level of the blocks queried.
    Accepts one of the following strings: ["finalized", "confirmed", "processed"]
  enum:
    - finalized
    - confirmed
    - processed
configObject:
  type: object
  properties:
    commitment:
      $ref: '#/commitment'
    minContextSlot:
      $ref: '#/minContextSlot'
getBalance:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getBalance
          enum:
            - getBalance
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Pubkey of account to query.
              - $ref: '#/configObject'
getMultipleAccounts:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getMultipleAccounts
          enum:
            - getMultipleAccounts
        params:
          type: array
          minItems: 2
          maxitems: 2
          items:
            oneOf:
              - type: array
                items:
                  type: string
                description: Array of Base-58 Encoded Strings - An array of Pubkeys to query (up to a maximum of 100).
              - type: object
                description: Config object.
                properties:
                  encoding:
                    $ref: '#/encoding'
                  dataSlice:
                    $ref: '#/dataSlice'
                  minContextSlot:
                    $ref: '#/minContextSlot'
filters:
  type: array
  description: Array - Filter results using various filter objects; account must meet all filter criteria to be included in results.
  items:
    type: object
    properties:
      memcmp:
        type: object
        description: Compares a provided series of bytes with program account data at a particular offset.
        properties:
          offset:
            type: integer
            description: An offset into program account data to start comparison.
          bytes:
            type: string
            description: 'String - Data to match, as base-58 encoded string and limited to less than 129 bytes.'
      dataSize:
        type: integer
        format: int64
        description: Compares the program account data length with the provided data size.
getProgramAccounts:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getProgramAccounts
          enum:
            - getProgramAccounts
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded sStrings - Pubkey of program.
              - type: object
                properties:
                  encoding:
                    $ref: '#/encoding'
                  dataSlice:
                    $ref: '#/dataSlice'
                  filters:
                    $ref: '#/filters'
                  withContext:
                    type: boolean
                    description: Wrap the result in an RpcResponse JSON object.
                  minContextSlot:
                    $ref: '#/minContextSlot'
getVoteAccounts:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getVoteAccounts
          enum:
            - getVoteAccounts
        params:
          type: array
          items:
            type: object
            properties:
              commitment:
                $ref: '#/commitment'
              votePubkey:
                type: string
                description: Base-58 Encoded String - Only return results for this validator vote address.
              keepUnstakedDelinquents:
                type: boolean
                description: Do not filter out delinquent validators with no stake.
              delinquentSlotDistance:
                type: integer
                format: int64
                description: Specify the number of slots behind the tip that a validator must fall to be considered delinquent.
getLargestAccounts:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getLargestAccounts
          enum:
            - getLargestAccounts
        params:
          type: array
          items:
            type: object
            properties:
              commitment:
                $ref: '#/commitment'
              filter:
                type: string
                description: Filter results by account type; currently supported - "circulating" or "nonCirculating".
                enum:
                  - circulating
                  - nonCirculating
getClusterNodes:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getClusterNodes
          enum:
            - getClusterNodes
getVersion:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getVersion
          enum:
            - getVersion
getEpochInfo:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getVersion
          enum:
            - getVersion
        params:
          type: array
          items:
            $ref: '#/configObject'
getEpochSchedule:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getEpochSchedule
          enum:
            - getEpochSchedule
getFeeForMessage:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getFeeForMessage
          enum:
            - getFeeForMessage
        params:
          type: array
          description: |
            - message: <Base-64  string> - encoded Message
            - commitment: <object> - (optional) Configures the commitment level of the blocks queried
              Accepts one of the following strings: ["finalized", "confirmed", "processed"] 
              For more info, refer to this doc.
          items:
            type: string
getFirstAvailableBlock:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getFirstAvailableBlock
          enum:
            - getFirstAvailableBlock
getGenesisHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getGenesisHash
          enum:
            - getGenesisHash
getHighestSnapshotSlot:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getHighestSnapshotSlot
          enum:
            - getHighestSnapshotSlot
getMinimumBalanceForRentExemption:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getMinimumBalanceForRentExemption
          enum:
            - getMinimumBalanceForRentExemption
        params:
          type: array
          items:
            oneOf:
              - type: integer
                description: usize - Account data length.
              - type: object
                properties:
                  commitment:
                    $ref: '#/commitment'
getRecentPerformanceSamples:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getRecentPerformanceSamples
          enum:
            - getRecentPerformanceSamples
        params:
          type: array
          description: Array of number of samples to return (maximum 720).
          items:
            type: integer
            format: int64
getHealth:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getHealth
          enum:
            - getHealth
getIdentity:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getIdentity
          enum:
            - getIdentity
getInflationGovernor:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getInflationGovernor
          enum:
            - getInflationGovernor
        params:
          type: array
          items:
            type: object
            properties:
              commitment:
                $ref: '#/commitment'
getInflationRate:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getInflationRate
          enum:
            - getInflationRate
getInflationReward:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getInflationReward
          enum:
            - getInflationReward
        params:
          type: array
          items:
            oneOf:
              - type: array
                description: Array of Base-58 Encoded Strings - An array of addresses to query.
                items:
                  type: string
              - type: object
                properties:
                  commitment:
                    $ref: '#/commitment'
                  epoch:
                    type: integer
                    format: int64
                    description: 'u64 - An epoch for which the reward occurs. If omitted, the previous epoch will be used.'
                  minContextSlot:
                    $ref: '#/minContextSlot'
getSupply:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getSupply
          enum:
            - getSupply
        params:
          type: array
          items:
            type: object
            properties:
              commitment:
                $ref: '#/commitment'
              excludeNonCirculatingAccountsList:
                type: boolean
                description: Boolean - Excludes non circulating accounts list from response.
getSlot:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getSlot
          enum:
            - getSlot
        params:
          type: array
          items:
            $ref: '#/configObject'
getSlotLeaders:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getSlotLeaders
          enum:
            - getSlotLeaders
        params:
          type: array
          minItems: 2
          maxItems: 2
          description: |
            - u64 - Start slot.
            - u64 - Limit of the number of slot leaders in the response payload.
          items:
            type: integer
            format: int64
getMaxRetransmitSlot:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getMaxRetransmitSlot
          enum:
            - getMaxRetransmitSlot
getMaxShredInsertSlot:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getMaxShredInsertSlot
          enum:
            - getMaxShredInsertSlot
minimumLedgerSlot:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: minimumLedgerSlot
          enum:
            - minimumLedgerSlot
getTokenAccountBalance:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getTokenAccountBalance
          enum:
            - getTokenAccountBalance
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Pubkey of queried token account.
              - type: object
                properties:
                  commitment:
                    $ref: '#/commitment'
getTokenAccountsByOwner:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getTokenAccountsByOwner
          enum:
            - getTokenAccountsByOwner
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Pubkey of queried SPL token account owner.
              - oneOf:
                  - type: object
                    properties:
                      mint:
                        type: Base-58 Encoded String - Pubkey of the specific token Mint to limit accounts to.
                  - type: object
                    properties:
                      programId:
                        type: string
                        description: Base-58 Encoded String - Pubkey of the Token program that owns the accounts.
              - type: object
                properties:
                  commitment:
                    $ref: '#/commitment'
                  encoding:
                    $ref: '#/encoding'
                  dataSlice:
                    $ref: '#/dataSlice'
                  minContextSlot:
                    $ref: '#/minContextSlot'
getTokenSupply:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getTokenSupply
          enum:
            - getTokenSupply
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Pubkey of token Mint to query.
              - type: object
                properties:
                  commitment:
                    $ref: '#/commitment'
getSignaturesForAddress:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getSignaturesForAddress
          enum:
            - getSignaturesForAddress
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Base-58 Encoded String - Account address.
              - type: object
                properties:
                  limit:
                    type: number
                    default: 1000
                    description: 'Maximum transaction signatures to return (between 1 and 1,000, default - 1,000).'
                  before:
                    type: string
                    description: Start searching backwards from this transaction signature. If not provided the search starts from the top of the highest max confirmed block.
                  until:
                    type: string
                    description: 'Search until this transaction signature, if found before limit reached.'
                  commitment:
                    $ref: '#/commitment'
                  minContextSlot:
                    $ref: '#/minContextSlot'
getSignatureStatuses:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getSignatureStatuses
          enum:
            - getSignatureStatuses
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - type: string
                description: Array of Base-58 Encoded String -  An array of transaction signatures to confirm.
              - type: object
                properties:
                  searchTransactionHistory:
                    type: boolean
                    description: 'If true, a Solana node will search its ledger cache for any signatures not found in the recent status cache.'
sendTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: sendTransaction
          enum:
            - sendTransaction
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - type: string
                description: Encoded String - Fully-signed Transaction.
              - type: object
                properties:
                  skipPreflight:
                    type: boolean
                    description: 'If true, skip the preflight transaction checks (default - false).'
                  preflightCommitment:
                    type: string
                    default: finalized
                    description: Commitment level to use for preflight (default - "finalized").
                  encoding:
                    $ref: '#/encoding'
                  maxRetries:
                    type: number
                    description: 'Maximum number of times for the RPC node to retry sending the transaction to the leader. If this parameter not provided, the RPC node will retry the transaction until it is finalized or until the blockhash expires.'
                  minContextSlot:
                    $ref: '#/minContextSlot'
simulateTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: simulateTransaction
          enum:
            - simulateTransaction
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - type: string
                description: 'Transaction, as an encoded string. The transaction must have a valid blockhash, but is not required to be signed.'
              - type: object
                properties:
                  sigVerify:
                    type: boolean
                    default: false
                    description: 'if true the transaction signatures will be verified (default - false, conflicts with replaceRecentBlockhash).'
                  commitment:
                    $ref: '#/commitment'
                  encoding:
                    type: string
                    default: base58
                    description: 'Encoding used for the transaction data. Either "base58" (slow, DEPRECATED), or "base64". (default - "base58").'
                  replaceRecentBlockhash:
                    type: boolean
                    default: false
                    description: 'If true, the transaction recent blockhash will be replaced with the most recent blockhash. (default - false, conflicts with sigVerify).'
                  accounts:
                    type: object
                    description: Accounts configuration object.
                    properties:
                      encoding:
                        type: string
                        default: base64
                        description: |
                          Data encoding for each returned transaction
                          Accepts one of the following strings:
                          ["base64" (default), "base64+zstd" or "jsonParsed"] 
                          "jsonParsed" encoding attempts to use program-specific parsers to make the transaction.message.instructions list more human-readable; if a parser cannot be found, the instruction falls back to default JSON.
                      addresses:
                        type: array
                        description: Array of Base-58 Encoded Strings - An array of accounts to return.
                        items:
                          type: string
                  minContextSlot:
                    $ref: '#/minContextSlot'
getTransaction:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: getTransaction
          enum:
            - getTransaction
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - type: string
                description: Returns transaction details for a confirmed transaction.
              - type: object
                properties:
                  encoding:
                    $ref: '#/encoding'
                  commitment:
                    $ref: '#/commitment'
                  maxSupportedTransactionVersion:
                    type: number
                    description: 'Set the max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned.'
bor_getAuthor:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: bor_getAuthor
          enum:
            - bor_getAuthor
        params:
          description: Array of block number (in hexadecimal format).
          type: array
          items:
            type: string
bor_getCurrentValidators:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: bor_getCurrentValidators
          enum:
            - bor_getCurrentValidators
bor_getCurrentProposer:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: bor_getCurrentProposer
          enum:
            - bor_getCurrentProposer
bor_getRootHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: bor_getCurrentProposer
          enum:
            - bor_getCurrentProposer
        params:
          type: array
          items:
            type: object
            properties:
              from:
                type: integer
                description: Block number (in int format).
              to:
                type: integer
                description: Block number (in int format).
eth_getRootHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getRootHash
          enum:
            - eth_getRootHash
        params:
          type: array
          items:
            type: object
            properties:
              from:
                type: integer
                description: Block number (in int format).
              to:
                type: integer
                description: Block number (in int format).
eth_getSignersAtHash:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getSignersAtHash
          enum:
            - eth_getSignersAtHash
        params:
          type: array
          minItems: 1
          maxItems: 1
          description: Blockhash.
          items:
            type: string
eth_getTransactionReceiptsByBlock:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_getTransactionReceiptsByBlock
          enum:
            - eth_getTransactionReceiptsByBlock
        params:
          type: array
          minItems: 1
          maxItems: 1
          description: block_number in hex OR block_hash.
          items:
            type: string
eth_syncing:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: eth_syncing
          enum:
            - eth_syncing
alchemy_getAssetTransfers:
  allOf:
    - $ref: '#/CommonProperties'
    - type: object
      properties:
        method:
          type: string
          default: alchemy_getAssetTransfers
          enum:
            - alchemy_getAssetTransfers
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/ethereumMainnet'
ethereumMainnet:
  type: object
  required:
    - category
  properties:
    fromBlock:
      type: string
      description: 'String - Inclusive from block (hex string, int, or latest)'
      default: '0x0'
    toBlock:
      type: string
      description: 'String - Inclusive to block (hex string, int, or latest)'
      default: latest
    fromAddress:
      type: string
      description: String - From address (hex string). Default wildcard - any address
    toAddress:
      type: string
      description: String - To address (hex string). Default wildcard - any address
    contractAddresses:
      type: string
      description: 'String - List of contract addresses (hex strings) to filter for - only applies to "token", "erc20", "erc721", "erc1155" transfers. Default wildcard - any address'
    category:
      type: array
      description: |
        'Array of categories, can be any of the following: "external", "internal", "erc20", "erc721", "erc1155". See the table above for supported categories on each network.'
      items:
        type: string
        enum:
          - external
          - internal
          - erc20
          - erc721
          - erc1155
    withMetadata:
      type: boolean
      description: Boolean - Whether or not to include additional metadata about each transfer event.
      default: false
    excludeZeroValue:
      type: boolean
      description: Boolean - A boolean to exclude transfers with zero value. Zero value is not the same as null value.
      default: true
    maxCount:
      type: string
      description: Max hex string number of results to return per call.
      default: '0x3e8'
    pageKey:
      type: string
      description: 'String - UUID for pagination. If more results are available, a uuid pageKey will be returned in the response. Pass that uuid into pageKey to fetch the next 1000 or maxCount.'

blockHashAndBooleanTransaction: '<br/>1. String - Hash of block <br/>2. Boolean - If true it returns the full transaction objects, if false it returns only the hashes of the transactions.'
blockNumberBooleanTransaction: '<br/>1. String - Integer of a block number, or the string ''earliest'', ''latest'' or ''pending'' <br/>2. Boolean  If true it returns the full transaction objects, if false only the hashes of the transactions.'
transactionHash: String - 32 Bytes - Hash of a transaction
blockNumber: 'String - Integer of a block number, or the string ''earliest'', ''latest'' or ''pending''.'
address_blockNumber: '<br/>1. String - 20 Bytes - Address <br/>2. String - Integer block number, or the string ''latest'', ''earliest'' or ''pending''.'
blockHash_index: <br/>1. String - 32 Bytes - Hash of a block <br/>2. String - Integer of the transaction index position.
blockNumber_index: '<br/>String - 1. A block number, or the string ''earliest'', ''latest'' or ''pending'' <br/>2. String - The transaction index position.'
blockNumberOrBlockHash: 'String - Block number or block hash to fetch transaction receipts for, or the string ''earliest'', ''latest'' or ''pending''.'
transactionData: String - The signed transaction data.
address_blockNumber_blockHash: '<br/>1. String - 20 Bytes - address of the storage <br/>2. String - Integer of the position in the storage. <br/>3. String - Integer block number, or the string ''latest'', ''earliest'' or ''pending''.'
address_storageKeys_blockNumber: '<br/>1. String - 20 Bytes - Address of the account <br/>2. Array - 32 Bytes - array of storage-keys which should be proofed and included <br/>3. String - Integer block number, or the string ''latest'' or ''earliest''.'
blockNumber_uncleIndex: '<br/>1. String - A block number, or the string ''earliest'', ''latest'' or ''pending'' <br/>2. String - The uncle''s index position.'
filterId: String - The filter id.
shaHash: String - The data in hex form to convert into a SHA3 hash.
subscriptionId: 'String - Subscription ID, as previously returned from an eth_subscribe call.'
alchemy_getTransactionReceipts: 'The api only takes in one parameter - an object with at least a blockNumber or blockHash. If both are provided, blockHash is prioritized.'
